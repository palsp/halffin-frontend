{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "CancelOracleRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "specId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callbackAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "callbackFunctionId",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cancelExpiration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dataVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "OracleRequest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EXPIRY_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes4",
          "name": "_callbackFunc",
          "type": "bytes4"
        },
        {
          "internalType": "uint256",
          "name": "_expiration",
          "type": "uint256"
        }
      ],
      "name": "cancelOracleRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_payment",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_callbackAddress",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_callbackFunctionId",
          "type": "bytes4"
        },
        {
          "internalType": "uint256",
          "name": "_expiration",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_data",
          "type": "bytes32"
        }
      ],
      "name": "fulfillOracleRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "getAuthorizationStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainlinkToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_payment",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_specId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_callbackAddress",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "_callbackFunctionId",
          "type": "bytes4"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dataVersion",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "oracleRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_node",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setFulfillmentPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/LinkTokenReceiver.sol",
    "3": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol",
    "4": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
    "5": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/interfaces/OracleInterface.sol",
    "6": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/interfaces/WithdrawalInterface.sol",
    "7": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/vendor/Ownable.sol",
    "8": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
    "9": "contracts/Oracle.sol"
  },
  "ast": {
    "absolutePath": "contracts/Oracle.sol",
    "exportedSymbols": {
      "Oracle": [
        467
      ]
    },
    "id": 468,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:9"
      },
      {
        "absolutePath": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/LinkTokenReceiver.sol",
        "file": "@chainlink/contracts/src/v0.6/LinkTokenReceiver.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 692,
        "src": "56:61:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 725,
        "src": "118:80:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/interfaces/OracleInterface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/OracleInterface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 866,
        "src": "199:70:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 820,
        "src": "270:73:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/interfaces/WithdrawalInterface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/WithdrawalInterface.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 883,
        "src": "344:74:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/vendor/Ownable.sol",
        "file": "@chainlink/contracts/src/v0.6/vendor/Ownable.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 984,
        "src": "419:58:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/palll/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
        "file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 1123,
        "src": "478:68:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "ChainlinkRequestInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 724,
              "src": "703:25:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkRequestInterface_$724",
                "typeString": "contract ChainlinkRequestInterface"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "703:25:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "OracleInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 865,
              "src": "734:15:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$865",
                "typeString": "contract OracleInterface"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "734:15:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 983,
              "src": "755:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$983",
                "typeString": "contract Ownable"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "755:7:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "LinkTokenReceiver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 691,
              "src": "768:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenReceiver_$691",
                "typeString": "contract LinkTokenReceiver"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "768:17:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "WithdrawalInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 882,
              "src": "791:19:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WithdrawalInterface_$882",
                "typeString": "contract WithdrawalInterface"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "791:19:9"
          }
        ],
        "contractDependencies": [
          691,
          724,
          865,
          882,
          983
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "548:131:9",
          "text": "@title The Chainlink Oracle contract\n@notice Node operators can deploy this contract to fulfill requests sent to them"
        },
        "fullyImplemented": true,
        "id": 467,
        "linearizedBaseContracts": [
          467,
          882,
          691,
          983,
          865,
          724
        ],
        "name": "Oracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "contractScope": null,
              "id": 20,
              "name": "SafeMathChainlink",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1122,
              "src": "823:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathChainlink_$1122",
                "typeString": "library SafeMathChainlink"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "817:36:9",
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "845:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "4b602282",
            "id": 25,
            "mutability": "constant",
            "name": "EXPIRY_TIME",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "859:47:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "859:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "897:9:9",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 28,
            "mutability": "constant",
            "name": "MINIMUM_CONSUMER_GAS_LIMIT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "912:60:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "912:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "343030303030",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "966:6:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_400000_by_1",
                "typeString": "int_const 400000"
              },
              "value": "400000"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 31,
            "mutability": "constant",
            "name": "ONE_FOR_CONSISTENT_GAS_COST",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "1084:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1084:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1139:1:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "LinkToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "1147:37:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 32,
              "name": "LinkTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 819,
              "src": "1147:18:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "commitments",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "1190:47:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 34,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1198:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1190:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 35,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1209:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "authorizedNodes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "1243:48:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1251:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1243:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 39,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1262:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "withdrawableTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "1297:64:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1297:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "id": 43,
              "name": "ONE_FOR_CONSISTENT_GAS_COST",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31,
              "src": "1334:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 64,
            "name": "OracleRequest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "specId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1397:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requester",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1429:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1456:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "payment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1483:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "callbackAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1508:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "callbackFunctionId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1538:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cancelExpiration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1573:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dataVersion",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1607:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 64,
                  "src": "1636:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1387:265:9"
            },
            "src": "1368:285:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 68,
            "name": "CancelOracleRequest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 68,
                  "src": "1685:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1684:27:9"
            },
            "src": "1659:53:9"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1960:103:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "LinkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1970:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2001:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 77,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "1982:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$819_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1982:25:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "1970:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:37:9"
                }
              ]
            },
            "documentation": {
              "id": 69,
              "nodeType": "StructuredDocumentation",
              "src": "1718:193:9",
              "text": "@notice Deploy with the address of the LINK token\n@dev Sets the LinkToken address for the imported LinkTokenInterface\n@param _link The address of the LINK token"
            },
            "id": 83,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 74,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 983,
                  "src": "1950:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$983_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1950:9:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_link",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1928:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1927:15:9"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1960:0:9"
            },
            "scope": 467,
            "src": "1916:147:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              712
            ],
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "3077:738:9",
              "statements": [
                {
                  "assignments": [
                    110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 110,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 161,
                      "src": "3087:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 109,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3087:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 114,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "3134:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "3143:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3117:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3117:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3117:33:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 111,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3107:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3107:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3087:64:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "3169:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 122,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 121,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110,
                            "src": "3181:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3169:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3195:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3169:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420757365206120756e69717565204944",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3198:22:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da89408418f1aa3860811d2e64085e2b94d33f2815f2070010f4d0def719e723",
                          "typeString": "literal_string \"Must use a unique ID\""
                        },
                        "value": "Must use a unique ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da89408418f1aa3860811d2e64085e2b94d33f2815f2070010f4d0def719e723",
                          "typeString": "literal_string \"Must use a unique ID\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3161:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3161:60:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:60:9"
                },
                {
                  "assignments": [
                    129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 129,
                      "mutability": "mutable",
                      "name": "expiration",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 161,
                      "src": "3285:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3285:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "EXPIRY_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3314:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "3306:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1012,
                      "src": "3306:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3306:20:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3285:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "3337:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3349:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3337:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 141,
                              "name": "_payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "3419:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "_callbackAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "3445:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 143,
                              "name": "_callbackFunctionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "3479:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 144,
                              "name": "expiration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3516:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 139,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3385:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3385:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3385:155:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 138,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3362:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3362:188:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3337:213:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "3337:213:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 150,
                        "name": "_specId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "3593:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "3614:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3635:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "_payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3658:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "_callbackAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "3680:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "_callbackFunctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "3710:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "expiration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "3743:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 157,
                        "name": "_dataVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "3767:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "3793:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 149,
                      "name": "OracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3566:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$_t_uint256_$_t_address_$_t_bytes4_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,bytes32,uint256,address,bytes4,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3566:242:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "EmitStatement",
                  "src": "3561:247:9"
                }
              ]
            },
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "2069:678:9",
              "text": "@notice Creates the Chainlink request\n@dev Stores the hash of the params as the on-chain commitment for the request.\nEmits OracleRequest event for the Chainlink node to detect.\n@param _sender The sender of the request\n@param _payment The amount of payment given (specified in wei)\n@param _specId The Job Specification ID\n@param _callbackAddress The callback address for the response\n@param _callbackFunctionId The callback function ID for the response\n@param _nonce The nonce sent by the requester\n@param _dataVersion The specified data version\n@param _data The CBOR payload of the request"
            },
            "functionSelector": "40429946",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 104,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 103,
                  "name": "onlyLINK",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 657,
                  "src": "3029:8:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3029:8:9"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 106,
                    "name": "_callbackAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92,
                    "src": "3059:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 107,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 105,
                  "name": "checkCallbackAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 466,
                  "src": "3038:20:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3038:38:9"
              }
            ],
            "name": "oracleRequest",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3020:8:9"
            },
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "2784:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_payment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "2809:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2809:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_specId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "2835:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_callbackAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "2860:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_callbackFunctionId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "2894:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2894:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "2930:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_dataVersion",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "2954:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 162,
                  "src": "2984:20:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2984:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2774:236:9"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3077:0:9"
            },
            "scope": 467,
            "src": "2752:1063:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              838
            ],
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "5036:1059:9",
              "statements": [
                {
                  "assignments": [
                    187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "paramsHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 241,
                      "src": "5046:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 186,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5046:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 197,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "_payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "5124:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 192,
                            "name": "_callbackAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "5150:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "_callbackFunctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5184:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 194,
                            "name": "_expiration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "5221:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5090:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5090:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5090:156:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 188,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5067:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5067:189:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5046:210:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 199,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "5287:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 201,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 200,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "5299:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5287:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "paramsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "5314:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "5287:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d7320646f206e6f74206d617463682072657175657374204944",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5338:32:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e12b50eea9311b443c52ff0775ecb76e354715072acf3c2225436432557396ee",
                          "typeString": "literal_string \"Params do not match request ID\""
                        },
                        "value": "Params do not match request ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e12b50eea9311b443c52ff0775ecb76e354715072acf3c2225436432557396ee",
                          "typeString": "literal_string \"Params do not match request ID\""
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5266:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5266:114:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "5266:114:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 207,
                      "name": "withdrawableTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5390:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "_payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "5434:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "withdrawableTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5411:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1012,
                        "src": "5411:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5411:32:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5390:53:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "5390:53:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5453:30:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "5460:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 216,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "5472:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5460:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "5453:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 220,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "5514:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5514:9:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 222,
                          "name": "MINIMUM_CONSUMER_GAS_LIMIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "5527:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5514:39:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742070726f7669646520636f6e73756d657220656e6f75676820676173",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5567:34:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e41e236f8c707f430128aec8d4f13fd0193750a557f2c094e8feda34850363f4",
                          "typeString": "literal_string \"Must provide consumer enough gas\""
                        },
                        "value": "Must provide consumer enough gas"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e41e236f8c707f430128aec8d4f13fd0193750a557f2c094e8feda34850363f4",
                          "typeString": "literal_string \"Must provide consumer enough gas\""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5493:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5493:118:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "5493:118:9"
                },
                {
                  "assignments": [
                    228,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 241,
                      "src": "5893:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 227,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5893:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 238,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 233,
                            "name": "_callbackFunctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5969:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 234,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "5990:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "6002:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5946:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5946:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5946:62:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 229,
                        "name": "_callbackAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "5911:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5911:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5911:107:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5892:126:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 239,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 228,
                    "src": "6081:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 185,
                  "id": 240,
                  "nodeType": "Return",
                  "src": "6074:14:9"
                }
              ]
            },
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "3821:875:9",
              "text": "@notice Called by the Chainlink node to fulfill requests\n@dev Given params must hash back to the commitment stored from `oracleRequest`.\nWill call the callback address' callback function without bubbling up error\nchecking in a `require` so that the node can get paid.\n@param _requestId The fulfillment request ID that must match the requester's\n@param _payment The payment amount that will be released for the oracle (specified in wei)\n@param _callbackAddress The callback address to call for fulfillment\n@param _callbackFunctionId The callback function ID to use for fulfillment\n@param _expiration The expiration that the node should respond by before the requester can cancel\n@param _data The data to return to the consuming contract\n@return Status if the external call was successful"
            },
            "functionSelector": "4ab0d190",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 179,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 178,
                  "name": "onlyAuthorizedNode",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 449,
                  "src": "4955:18:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4955:18:9"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 181,
                    "name": "_requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 165,
                    "src": "4997:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 182,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 180,
                  "name": "isValidRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 430,
                  "src": "4982:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4982:26:9"
              }
            ],
            "name": "fulfillOracleRequest",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4938:8:9"
            },
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "4740:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "_payment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "4768:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4768:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_callbackAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "4794:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4794:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_callbackFunctionId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "4828:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4828:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_expiration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "4864:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4864:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "4893:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4893:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4730:182:9"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "5026:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5026:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5025:6:9"
            },
            "scope": 467,
            "src": "4701:1394:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              845
            ],
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "6425:46:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 251,
                      "name": "authorizedNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "6442:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 253,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "6458:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6442:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 250,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "6435:29:9"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "6101:198:9",
              "text": "@notice Use this to check if a node is authorized for fulfilling requests\n@param _node The address of the Chainlink node\n@return The authorization status of the node"
            },
            "functionSelector": "d3e9c314",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuthorizationStatus",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 247,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6389:8:9"
            },
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 256,
                  "src": "6336:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6336:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6335:15:9"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 256,
                  "src": "6415:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6415:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6414:6:9"
            },
            "scope": 467,
            "src": "6304:167:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              852
            ],
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "6854:50:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "authorizedNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "6864:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "_node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "6880:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6864:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 270,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "6889:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6864:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "6864:33:9"
                }
              ]
            },
            "documentation": {
              "id": 257,
              "nodeType": "StructuredDocumentation",
              "src": "6477:252:9",
              "text": "@notice Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow.\n@param _node The address of the Chainlink node\n@param _allowed Bool value to determine if the node can fulfill requests"
            },
            "functionSelector": "7fcd56db",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 265,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 264,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 931,
                  "src": "6840:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6840:9:9"
              }
            ],
            "name": "setFulfillmentPermission",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 263,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6823:8:9"
            },
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 274,
                  "src": "6768:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 274,
                  "src": "6783:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6783:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6767:30:9"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6854:0:9"
            },
            "scope": 467,
            "src": "6734:170:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              859,
              875
            ],
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "7417:126:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 290,
                      "name": "withdrawableTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "7427:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 293,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "7471:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 291,
                          "name": "withdrawableTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "7448:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1038,
                        "src": "7448:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7448:31:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7427:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "7427:52:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "7515:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 301,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "7527:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 298,
                            "name": "LinkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "7496:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 796,
                          "src": "7496:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7496:39:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 297,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "7489:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7489:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "7489:47:9"
                }
              ]
            },
            "documentation": {
              "id": 275,
              "nodeType": "StructuredDocumentation",
              "src": "6910:318:9",
              "text": "@notice Allows the node operator to withdraw earned LINK to a given address\n@dev The owner of the contract can be another wallet and does not have to be a Chainlink node\n@param _recipient The address to send the LINK token to\n@param _amount The amount to send (specified in wei)"
            },
            "functionSelector": "f3fef3a3",
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 285,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 284,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 931,
                  "src": "7368:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7368:9:9"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 287,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 279,
                    "src": "7404:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 288,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 286,
                  "name": "hasAvailableFunds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "7386:17:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7386:26:9"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 283,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 281,
                  "name": "OracleInterface",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 865,
                  "src": "7322:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OracleInterface_$865",
                    "typeString": "contract OracleInterface"
                  }
                },
                {
                  "contractScope": null,
                  "id": 282,
                  "name": "WithdrawalInterface",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 882,
                  "src": "7339:19:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WithdrawalInterface_$882",
                    "typeString": "contract WithdrawalInterface"
                  }
                }
              ],
              "src": "7313:46:9"
            },
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 306,
                  "src": "7251:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7251:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 306,
                  "src": "7271:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7271:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7250:37:9"
            },
            "returnParameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7417:0:9"
            },
            "scope": 467,
            "src": "7233:310:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              864,
              881
            ],
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "7954:75:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 319,
                        "name": "ONE_FOR_CONSISTENT_GAS_COST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "7994:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 317,
                        "name": "withdrawableTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "7971:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1038,
                      "src": "7971:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7971:51:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 316,
                  "id": 321,
                  "nodeType": "Return",
                  "src": "7964:58:9"
                }
              ]
            },
            "documentation": {
              "id": 307,
              "nodeType": "StructuredDocumentation",
              "src": "7549:243:9",
              "text": "@notice Displays the amount of LINK that is available for the node operator to withdraw\n@dev We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage\n@return The amount of withdrawable LINK on the contract"
            },
            "functionSelector": "50188301",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 313,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 312,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 931,
                  "src": "7914:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7914:9:9"
              }
            ],
            "name": "withdrawable",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 311,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 309,
                  "name": "OracleInterface",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 865,
                  "src": "7868:15:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OracleInterface_$865",
                    "typeString": "contract OracleInterface"
                  }
                },
                {
                  "contractScope": null,
                  "id": 310,
                  "name": "WithdrawalInterface",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 882,
                  "src": "7885:19:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WithdrawalInterface_$882",
                    "typeString": "contract WithdrawalInterface"
                  }
                }
              ],
              "src": "7859:46:9"
            },
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7818:2:9"
            },
            "returnParameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 323,
                  "src": "7941:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7941:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7940:9:9"
            },
            "scope": 467,
            "src": "7797:232:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              723
            ],
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "8784:524:9",
              "statements": [
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "paramsHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 383,
                      "src": "8794:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8794:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 348,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 341,
                            "name": "_payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "8855:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 342,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8865:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8865:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 344,
                            "name": "_callbackFunc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "8877:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 345,
                            "name": "_expiration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "8892:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 339,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8838:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8838:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8838:66:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 338,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8815:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8815:99:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8794:120:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 350,
                          "name": "paramsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "8945:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 351,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "8959:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 353,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 352,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 326,
                            "src": "8971:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8959:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8945:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d7320646f206e6f74206d617463682072657175657374204944",
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8996:32:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e12b50eea9311b443c52ff0775ecb76e354715072acf3c2225436432557396ee",
                          "typeString": "literal_string \"Params do not match request ID\""
                        },
                        "value": "Params do not match request ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e12b50eea9311b443c52ff0775ecb76e354715072acf3c2225436432557396ee",
                          "typeString": "literal_string \"Params do not match request ID\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8924:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8924:114:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "8924:114:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "_expiration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "9110:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "9125:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9110:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52657175657374206973206e6f742065787069726564",
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9130:24:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4469681584edb09f4c5168c152dcbc615ee04be0f2982d1d010c0509f79b076c",
                          "typeString": "literal_string \"Request is not expired\""
                        },
                        "value": "Request is not expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4469681584edb09f4c5168c152dcbc615ee04be0f2982d1d010c0509f79b076c",
                          "typeString": "literal_string \"Request is not expired\""
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9102:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9102:53:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "9102:53:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9166:30:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "9173:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 367,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 366,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "9185:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9173:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "9166:30:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "9231:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 370,
                      "name": "CancelOracleRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "9211:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9211:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "EmitStatement",
                  "src": "9206:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 377,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9279:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9279:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 379,
                            "name": "_payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "9291:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 375,
                            "name": "LinkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "9260:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 796,
                          "src": "9260:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9260:40:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 374,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "9253:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9253:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "9253:48:9"
                }
              ]
            },
            "documentation": {
              "id": 324,
              "nodeType": "StructuredDocumentation",
              "src": "8035:578:9",
              "text": "@notice Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK\nsent for the request back to the requester's address.\n@dev Given params must hash to a commitment stored on the contract in order for the request to be valid\nEmits CancelOracleRequest event.\n@param _requestId The request ID\n@param _payment The amount of payment given (specified in wei)\n@param _callbackFunc The requester's specified callback address\n@param _expiration The time of the expiration for the request"
            },
            "functionSelector": "6ee4d553",
            "id": 384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOracleRequest",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 334,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8775:8:9"
            },
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 384,
                  "src": "8656:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8656:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "_payment",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 384,
                  "src": "8684:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8684:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "_callbackFunc",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 384,
                  "src": "8710:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8710:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "_expiration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 384,
                  "src": "8740:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8740:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8646:119:9"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8784:0:9"
            },
            "scope": 467,
            "src": "8618:690:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              643
            ],
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "9591:42:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "LinkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "9616:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                          "typeString": "contract LinkTokenInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                          "typeString": "contract LinkTokenInterface"
                        }
                      ],
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9608:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 391,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9608:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9608:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 390,
                  "id": 395,
                  "nodeType": "Return",
                  "src": "9601:25:9"
                }
              ]
            },
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "9314:204:9",
              "text": "@notice Returns the address of the LINK token\n@dev This is the public implementation for chainlinkTokenAddress, which is\nan internal method of the ChainlinkClient contract"
            },
            "functionSelector": "165d35e1",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainlinkToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 387,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9564:8:9"
            },
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9549:2:9"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 397,
                  "src": "9582:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9582:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9581:9:9"
            },
            "scope": 467,
            "src": "9523:110:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "9868:190:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 403,
                          "name": "withdrawableTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "9899:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 406,
                              "name": "ONE_FOR_CONSISTENT_GAS_COST",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "9933:27:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 404,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "9921:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1012,
                            "src": "9921:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9921:40:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9899:62:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74207265717565737465642069732067726561746572207468616e20776974686472617761626c652062616c616e6365",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9975:55:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87cfc663fcf6403059a83571137d56c7da4a1aa2a371627fe8ecf960f50e10c2",
                          "typeString": "literal_string \"Amount requested is greater than withdrawable balance\""
                        },
                        "value": "Amount requested is greater than withdrawable balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87cfc663fcf6403059a83571137d56c7da4a1aa2a371627fe8ecf960f50e10c2",
                          "typeString": "literal_string \"Amount requested is greater than withdrawable balance\""
                        }
                      ],
                      "id": 402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9878:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9878:162:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "9878:162:9"
                },
                {
                  "id": 412,
                  "nodeType": "PlaceholderStatement",
                  "src": "10050:1:9"
                }
              ]
            },
            "documentation": {
              "id": 398,
              "nodeType": "StructuredDocumentation",
              "src": "9657:162:9",
              "text": "@dev Reverts if amount requested is greater than withdrawable balance\n@param _amount The given amount to compare to `withdrawableTokens`"
            },
            "id": 414,
            "name": "hasAvailableFunds",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 414,
                  "src": "9851:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9851:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9850:17:9"
            },
            "src": "9824:234:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "10252:96:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 420,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "10270:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                              "typeString": "mapping(bytes32 => bytes32)"
                            }
                          },
                          "id": 422,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 421,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "10282:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10270:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10297:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10270:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520612076616c696420726571756573744964",
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10300:29:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193",
                          "typeString": "literal_string \"Must have a valid requestId\""
                        },
                        "value": "Must have a valid requestId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193",
                          "typeString": "literal_string \"Must have a valid requestId\""
                        }
                      ],
                      "id": 419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10262:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10262:68:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "10262:68:9"
                },
                {
                  "id": 428,
                  "nodeType": "PlaceholderStatement",
                  "src": "10340:1:9"
                }
              ]
            },
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "10064:139:9",
              "text": "@dev Reverts if request ID does not exist\n@param _requestId The given request ID to check in stored `commitments`"
            },
            "id": 430,
            "name": "isValidRequest",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 430,
                  "src": "10232:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10232:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10231:20:9"
            },
            "src": "10208:140:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "10474:169:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 434,
                            "name": "authorizedNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "10505:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 437,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 435,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10521:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10521:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10505:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 438,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10536:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10536:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 440,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 920,
                              "src": "10550:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10550:7:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10536:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10505:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420616e20617574686f72697a6564206e6f646520746f2066756c66696c6c207265717565737473",
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10571:44:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_925999ab7f59e53d75c57dd1272073b0ac720fd79679a14e43fcd1866a053ed4",
                          "typeString": "literal_string \"Not an authorized node to fulfill requests\""
                        },
                        "value": "Not an authorized node to fulfill requests"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_925999ab7f59e53d75c57dd1272073b0ac720fd79679a14e43fcd1866a053ed4",
                          "typeString": "literal_string \"Not an authorized node to fulfill requests\""
                        }
                      ],
                      "id": 433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10484:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10484:141:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "10484:141:9"
                },
                {
                  "id": 447,
                  "nodeType": "PlaceholderStatement",
                  "src": "10635:1:9"
                }
              ]
            },
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "10354:85:9",
              "text": "@dev Reverts if `msg.sender` is not authorized to fulfill requests"
            },
            "id": 449,
            "name": "onlyAuthorizedNode",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10471:2:9"
            },
            "src": "10444:199:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "10809:89:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 455,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "10827:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 458,
                              "name": "LinkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "10842:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                                "typeString": "contract LinkTokenInterface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$819",
                                "typeString": "contract LinkTokenInterface"
                              }
                            ],
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10834:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 456,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10834:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10834:18:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10827:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f742063616c6c6261636b20746f204c494e4b",
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10854:25:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c91bf1db15c019a879a37eef54af733a5f0801faedda1a37e217ea60f3cdcf4",
                          "typeString": "literal_string \"Cannot callback to LINK\""
                        },
                        "value": "Cannot callback to LINK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c91bf1db15c019a879a37eef54af733a5f0801faedda1a37e217ea60f3cdcf4",
                          "typeString": "literal_string \"Cannot callback to LINK\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10819:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10819:61:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "10819:61:9"
                },
                {
                  "id": 464,
                  "nodeType": "PlaceholderStatement",
                  "src": "10890:1:9"
                }
              ]
            },
            "documentation": {
              "id": 450,
              "nodeType": "StructuredDocumentation",
              "src": "10649:112:9",
              "text": "@dev Reverts if the callback address is the LINK token\n@param _to The callback address"
            },
            "id": 466,
            "name": "checkCallbackAddress",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 466,
                  "src": "10796:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10796:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10795:13:9"
            },
            "src": "10766:132:9",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 468,
        "src": "680:10220:9"
      }
    ],
    "src": "32:10869:9"
  },
  "bytecode": "6080604052600160045534801561001557600080fd5b506040516113363803806113368339818101604052602081101561003857600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600180546001600160a01b0319166001600160a01b0392909216919091179055611284806100b26000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637fcd56db1161008c578063a4c0ed3611610066578063a4c0ed36146102a6578063d3e9c31414610361578063f2fde38b14610387578063f3fef3a3146103ad576100cf565b80637fcd56db146102685780638da5cb5b146102965780638f32d59b1461029e576100cf565b8063165d35e1146100d457806340429946146100f85780634ab0d190146101ab5780634b6022821461020d57806350188301146102275780636ee4d5531461022f575b600080fd5b6100dc6103d9565b604080516001600160a01b039092168252519081900360200190f35b6101a9600480360361010081101561010f57600080fd5b6001600160a01b038235811692602081013592604082013592606083013516916001600160e01b03196080820135169160a08201359160c081013591810190610100810160e082013564010000000081111561016a57600080fd5b82018360208201111561017c57600080fd5b8035906020019184600183028401116401000000008311171561019e57600080fd5b5090925090506103e8565b005b6101f9600480360360c08110156101c157600080fd5b508035906020810135906001600160a01b03604082013516906001600160e01b03196060820135169060808101359060a001356106be565b604080519115158252519081900360200190f35b6102156109b8565b60408051918252519081900360200190f35b6102156109be565b6101a96004803603608081101561024557600080fd5b508035906020810135906001600160e01b03196040820135169060600135610a20565b6101a96004803603604081101561027e57600080fd5b506001600160a01b0381351690602001351515610bda565b6100dc610c4c565b6101f9610c5b565b6101a9600480360360608110156102bc57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156102ec57600080fd5b8201836020820111156102fe57600080fd5b8035906020019184600183028401116401000000008311171561032057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c6c945050505050565b6101f96004803603602081101561037757600080fd5b50356001600160a01b0316610e99565b6101a96004803603602081101561039d57600080fd5b50356001600160a01b0316610eb7565b6101a9600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610f0a565b6001546001600160a01b031690565b6103f06103d9565b6001600160a01b0316336001600160a01b03161461044b576040805162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015290519081900360640190fd5b60015486906001600160a01b03808316911614156104b0576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f742063616c6c6261636b20746f204c494e4b000000000000000000604482015290519081900360640190fd5b604080516bffffffffffffffffffffffff1960608d901b166020808301919091526034808301899052835180840390910181526054909201835281519181019190912060008181526002909252919020541561054a576040805162461bcd60e51b8152602060048201526014602482015273135d5cdd081d5cd94818481d5b9a5c5d5948125160621b604482015290519081900360640190fd5b600061055e4261012c63ffffffff61104b16565b90508a89898360405160200180858152602001846001600160a01b03166001600160a01b031660601b8152601401836001600160e01b0319166001600160e01b0319168152600401828152602001945050505050604051602081830303815290604052805190602001206002600084815260200190815260200160002081905550897fd8d7ecc4800d25fa53ce0372f13a416d98907a7ef3d8d3bdd79cf4fe75529c658d848e8d8d878d8d8d604051808a6001600160a01b03166001600160a01b03168152602001898152602001888152602001876001600160a01b03166001600160a01b03168152602001866001600160e01b0319166001600160e01b0319168152602001858152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039c50909a5050505050505050505050a2505050505050505050505050565b3360009081526003602052604081205460ff16806106f457506106df610c4c565b6001600160a01b0316336001600160a01b0316145b61072f5760405162461bcd60e51b815260040180806020018281038252602a815260200180611205602a913960400191505060405180910390fd5b6000878152600260205260409020548790610791576040805162461bcd60e51b815260206004820152601b60248201527f4d757374206861766520612076616c6964207265717565737449640000000000604482015290519081900360640190fd5b6040805160208082018a90526bffffffffffffffffffffffff1960608a901b16828401526001600160e01b0319881660548301526058808301889052835180840390910181526078909201835281519181019190912060008b81526002909252919020548114610848576040805162461bcd60e51b815260206004820152601e60248201527f506172616d7320646f206e6f74206d6174636820726571756573742049440000604482015290519081900360640190fd5b60045461085b908963ffffffff61104b16565b60045560008981526002602052604081205562061a805a10156108c5576040805162461bcd60e51b815260206004820181905260248201527f4d7573742070726f7669646520636f6e73756d657220656e6f75676820676173604482015290519081900360640190fd5b60408051602481018b9052604480820187905282518083039091018152606490910182526020810180516001600160e01b03166001600160e01b03198a16178152915181516000936001600160a01b038c169392918291908083835b602083106109405780518252601f199092019160209182019101610921565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146109a2576040519150601f19603f3d011682016040523d82523d6000602084013e6109a7565b606091505b50909b9a5050505050505050505050565b61012c81565b60006109c8610c5b565b610a07576040805162461bcd60e51b8152602060048201819052602482015260008051602061122f833981519152604482015290519081900360640190fd5b600454610a1b90600163ffffffff6110ac16565b905090565b6040805160208082018690523360601b828401526001600160e01b0319851660548301526058808301859052835180840390910181526078909201835281519181019190912060008781526002909252919020548114610ac7576040805162461bcd60e51b815260206004820152601e60248201527f506172616d7320646f206e6f74206d6174636820726571756573742049440000604482015290519081900360640190fd5b42821115610b15576040805162461bcd60e51b815260206004820152601660248201527514995c5d595cdd081a5cc81b9bdd08195e1c1a5c995960521b604482015290519081900360640190fd5b6000858152600260205260408082208290555186917fa7842b9ec549398102c0d91b1b9919b2f20558aefdadf57528a95c6cd3292e9391a26001546040805163a9059cbb60e01b81523360048201526024810187905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b158015610ba157600080fd5b505af1158015610bb5573d6000803e3d6000fd5b505050506040513d6020811015610bcb57600080fd5b5051610bd357fe5b5050505050565b610be2610c5b565b610c21576040805162461bcd60e51b8152602060048201819052602482015260008051602061122f833981519152604482015290519081900360640190fd5b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610c746103d9565b6001600160a01b0316336001600160a01b031614610ccf576040805162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015290519081900360640190fd5b8051819060441115610d21576040805162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840e4cae2eacae6e840d8cadccee8d60531b604482015290519081900360640190fd5b602082015182906001600160e01b031981166320214ca360e11b14610d8d576040805162461bcd60e51b815260206004820152601e60248201527f4d757374207573652077686974656c69737465642066756e6374696f6e730000604482015290519081900360640190fd5b8560248501528460448501526000306001600160a01b0316856040518082805190602001908083835b60208310610dd55780518252601f199092019160209182019101610db6565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610e35576040519150601f19603f3d011682016040523d82523d6000602084013e610e3a565b606091505b5050905080610e90576040805162461bcd60e51b815260206004820152601860248201527f556e61626c6520746f2063726561746520726571756573740000000000000000604482015290519081900360640190fd5b50505050505050565b6001600160a01b031660009081526003602052604090205460ff1690565b610ebf610c5b565b610efe576040805162461bcd60e51b8152602060048201819052602482015260008051602061122f833981519152604482015290519081900360640190fd5b610f0781611109565b50565b610f12610c5b565b610f51576040805162461bcd60e51b8152602060048201819052602482015260008051602061122f833981519152604482015290519081900360640190fd5b80610f6381600163ffffffff61104b16565b6004541015610fa35760405162461bcd60e51b81526004018080602001828103825260358152602001806111d06035913960400191505060405180910390fd5b600454610fb6908363ffffffff6110ac16565b60049081556001546040805163a9059cbb60e01b81526001600160a01b0387811694820194909452602481018690529051929091169163a9059cbb916044808201926020929091908290030181600087803b15801561101457600080fd5b505af1158015611028573d6000803e3d6000fd5b505050506040513d602081101561103e57600080fd5b505161104657fe5b505050565b6000828201838110156110a5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082821115611103576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6001600160a01b03811661114e5760405162461bcd60e51b81526004018080602001828103825260268152602001806111aa6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416d6f756e74207265717565737465642069732067726561746572207468616e20776974686472617761626c652062616c616e63654e6f7420616e20617574686f72697a6564206e6f646520746f2066756c66696c6c2072657175657374734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220416fc850aae46cd717f9279336778cd2e6ab5d10f54530c24c6bd8ac432a4d7a64736f6c63430006060033",
  "bytecodeSha1": "b5c9ecbc461cc7d8ce515d36341b6970e8286058",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.6+commit.6c089d02"
  },
  "contractName": "Oracle",
  "coverageMap": {
    "branches": {
      "0": {
        "LinkTokenReceiver.onTokenTransfer": {
          "37": [
            1584,
            1617,
            true
          ],
          "38": [
            1372,
            1379,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Oracle.withdraw": {
          "39": [
            1079,
            1088,
            true
          ]
        },
        "Ownable._transferOwnership": {
          "40": [
            1698,
            1720,
            true
          ]
        }
      },
      "8": {
        "SafeMathChainlink.add": {
          "41": [
            967,
            973,
            true
          ]
        },
        "SafeMathChainlink.sub": {
          "42": [
            1358,
            1364,
            true
          ]
        }
      },
      "9": {
        "Oracle.cancelOracleRequest": {
          "34": [
            8945,
            8982,
            true
          ],
          "35": [
            9110,
            9128,
            true
          ]
        },
        "Oracle.fulfillOracleRequest": {
          "30": [
            10505,
            10532,
            true
          ],
          "31": [
            10536,
            10557,
            true
          ],
          "32": [
            5287,
            5324,
            true
          ],
          "33": [
            5514,
            5553,
            true
          ]
        },
        "Oracle.oracleRequest": {
          "28": [
            10827,
            10852,
            true
          ],
          "29": [
            3169,
            3196,
            true
          ]
        },
        "Oracle.withdraw": {
          "36": [
            9899,
            9961,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "LinkTokenReceiver.onTokenTransfer": {
          "17": [
            1364,
            1408
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "Ownable._transferOwnership": {
          "25": [
            1690,
            1763
          ],
          "26": [
            1769,
            1812
          ],
          "27": [
            1818,
            1835
          ]
        },
        "Ownable.isOwner": {
          "16": [
            1264,
            1291
          ]
        },
        "Ownable.owner": {
          "15": [
            946,
            959
          ]
        },
        "Ownable.transferOwnership": {
          "19": [
            1503,
            1531
          ]
        }
      },
      "8": {
        "SafeMathChainlink.add": {
          "22": [
            959,
            1005
          ],
          "23": [
            1012,
            1020
          ]
        },
        "SafeMathChainlink.sub": {
          "24": [
            1350,
            1399
          ]
        }
      },
      "9": {
        "Oracle.cancelOracleRequest": {
          "9": [
            8924,
            9038
          ],
          "10": [
            9102,
            9155
          ],
          "11": [
            9166,
            9196
          ],
          "12": [
            9206,
            9242
          ],
          "13": [
            9253,
            9301
          ]
        },
        "Oracle.fulfillOracleRequest": {
          "4": [
            5266,
            5380
          ],
          "5": [
            5390,
            5443
          ],
          "6": [
            5453,
            5483
          ],
          "7": [
            5493,
            5611
          ]
        },
        "Oracle.getAuthorizationStatus": {
          "18": [
            6435,
            6464
          ]
        },
        "Oracle.getChainlinkToken": {
          "0": [
            9601,
            9626
          ]
        },
        "Oracle.oracleRequest": {
          "1": [
            3161,
            3221
          ],
          "2": [
            3337,
            3550
          ],
          "3": [
            3561,
            3808
          ]
        },
        "Oracle.setFulfillmentPermission": {
          "14": [
            6864,
            6897
          ]
        },
        "Oracle.withdraw": {
          "20": [
            7427,
            7479
          ],
          "21": [
            7489,
            7536
          ]
        },
        "Oracle.withdrawable": {
          "8": [
            7964,
            8022
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/ChainlinkRequestInterface",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/LinkTokenInterface",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/LinkTokenReceiver",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/OracleInterface",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/SafeMathChainlink",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/WithdrawalInterface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637fcd56db1161008c578063a4c0ed3611610066578063a4c0ed36146102a6578063d3e9c31414610361578063f2fde38b14610387578063f3fef3a3146103ad576100cf565b80637fcd56db146102685780638da5cb5b146102965780638f32d59b1461029e576100cf565b8063165d35e1146100d457806340429946146100f85780634ab0d190146101ab5780634b6022821461020d57806350188301146102275780636ee4d5531461022f575b600080fd5b6100dc6103d9565b604080516001600160a01b039092168252519081900360200190f35b6101a9600480360361010081101561010f57600080fd5b6001600160a01b038235811692602081013592604082013592606083013516916001600160e01b03196080820135169160a08201359160c081013591810190610100810160e082013564010000000081111561016a57600080fd5b82018360208201111561017c57600080fd5b8035906020019184600183028401116401000000008311171561019e57600080fd5b5090925090506103e8565b005b6101f9600480360360c08110156101c157600080fd5b508035906020810135906001600160a01b03604082013516906001600160e01b03196060820135169060808101359060a001356106be565b604080519115158252519081900360200190f35b6102156109b8565b60408051918252519081900360200190f35b6102156109be565b6101a96004803603608081101561024557600080fd5b508035906020810135906001600160e01b03196040820135169060600135610a20565b6101a96004803603604081101561027e57600080fd5b506001600160a01b0381351690602001351515610bda565b6100dc610c4c565b6101f9610c5b565b6101a9600480360360608110156102bc57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156102ec57600080fd5b8201836020820111156102fe57600080fd5b8035906020019184600183028401116401000000008311171561032057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c6c945050505050565b6101f96004803603602081101561037757600080fd5b50356001600160a01b0316610e99565b6101a96004803603602081101561039d57600080fd5b50356001600160a01b0316610eb7565b6101a9600480360360408110156103c357600080fd5b506001600160a01b038135169060200135610f0a565b6001546001600160a01b031690565b6103f06103d9565b6001600160a01b0316336001600160a01b03161461044b576040805162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015290519081900360640190fd5b60015486906001600160a01b03808316911614156104b0576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f742063616c6c6261636b20746f204c494e4b000000000000000000604482015290519081900360640190fd5b604080516bffffffffffffffffffffffff1960608d901b166020808301919091526034808301899052835180840390910181526054909201835281519181019190912060008181526002909252919020541561054a576040805162461bcd60e51b8152602060048201526014602482015273135d5cdd081d5cd94818481d5b9a5c5d5948125160621b604482015290519081900360640190fd5b600061055e4261012c63ffffffff61104b16565b90508a89898360405160200180858152602001846001600160a01b03166001600160a01b031660601b8152601401836001600160e01b0319166001600160e01b0319168152600401828152602001945050505050604051602081830303815290604052805190602001206002600084815260200190815260200160002081905550897fd8d7ecc4800d25fa53ce0372f13a416d98907a7ef3d8d3bdd79cf4fe75529c658d848e8d8d878d8d8d604051808a6001600160a01b03166001600160a01b03168152602001898152602001888152602001876001600160a01b03166001600160a01b03168152602001866001600160e01b0319166001600160e01b0319168152602001858152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039c50909a5050505050505050505050a2505050505050505050505050565b3360009081526003602052604081205460ff16806106f457506106df610c4c565b6001600160a01b0316336001600160a01b0316145b61072f5760405162461bcd60e51b815260040180806020018281038252602a815260200180611205602a913960400191505060405180910390fd5b6000878152600260205260409020548790610791576040805162461bcd60e51b815260206004820152601b60248201527f4d757374206861766520612076616c6964207265717565737449640000000000604482015290519081900360640190fd5b6040805160208082018a90526bffffffffffffffffffffffff1960608a901b16828401526001600160e01b0319881660548301526058808301889052835180840390910181526078909201835281519181019190912060008b81526002909252919020548114610848576040805162461bcd60e51b815260206004820152601e60248201527f506172616d7320646f206e6f74206d6174636820726571756573742049440000604482015290519081900360640190fd5b60045461085b908963ffffffff61104b16565b60045560008981526002602052604081205562061a805a10156108c5576040805162461bcd60e51b815260206004820181905260248201527f4d7573742070726f7669646520636f6e73756d657220656e6f75676820676173604482015290519081900360640190fd5b60408051602481018b9052604480820187905282518083039091018152606490910182526020810180516001600160e01b03166001600160e01b03198a16178152915181516000936001600160a01b038c169392918291908083835b602083106109405780518252601f199092019160209182019101610921565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146109a2576040519150601f19603f3d011682016040523d82523d6000602084013e6109a7565b606091505b50909b9a5050505050505050505050565b61012c81565b60006109c8610c5b565b610a07576040805162461bcd60e51b8152602060048201819052602482015260008051602061122f833981519152604482015290519081900360640190fd5b600454610a1b90600163ffffffff6110ac16565b905090565b6040805160208082018690523360601b828401526001600160e01b0319851660548301526058808301859052835180840390910181526078909201835281519181019190912060008781526002909252919020548114610ac7576040805162461bcd60e51b815260206004820152601e60248201527f506172616d7320646f206e6f74206d6174636820726571756573742049440000604482015290519081900360640190fd5b42821115610b15576040805162461bcd60e51b815260206004820152601660248201527514995c5d595cdd081a5cc81b9bdd08195e1c1a5c995960521b604482015290519081900360640190fd5b6000858152600260205260408082208290555186917fa7842b9ec549398102c0d91b1b9919b2f20558aefdadf57528a95c6cd3292e9391a26001546040805163a9059cbb60e01b81523360048201526024810187905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b158015610ba157600080fd5b505af1158015610bb5573d6000803e3d6000fd5b505050506040513d6020811015610bcb57600080fd5b5051610bd357fe5b5050505050565b610be2610c5b565b610c21576040805162461bcd60e51b8152602060048201819052602482015260008051602061122f833981519152604482015290519081900360640190fd5b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610c746103d9565b6001600160a01b0316336001600160a01b031614610ccf576040805162461bcd60e51b815260206004820152601360248201527226bab9ba103ab9b2902624a725903a37b5b2b760691b604482015290519081900360640190fd5b8051819060441115610d21576040805162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840e4cae2eacae6e840d8cadccee8d60531b604482015290519081900360640190fd5b602082015182906001600160e01b031981166320214ca360e11b14610d8d576040805162461bcd60e51b815260206004820152601e60248201527f4d757374207573652077686974656c69737465642066756e6374696f6e730000604482015290519081900360640190fd5b8560248501528460448501526000306001600160a01b0316856040518082805190602001908083835b60208310610dd55780518252601f199092019160209182019101610db6565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610e35576040519150601f19603f3d011682016040523d82523d6000602084013e610e3a565b606091505b5050905080610e90576040805162461bcd60e51b815260206004820152601860248201527f556e61626c6520746f2063726561746520726571756573740000000000000000604482015290519081900360640190fd5b50505050505050565b6001600160a01b031660009081526003602052604090205460ff1690565b610ebf610c5b565b610efe576040805162461bcd60e51b8152602060048201819052602482015260008051602061122f833981519152604482015290519081900360640190fd5b610f0781611109565b50565b610f12610c5b565b610f51576040805162461bcd60e51b8152602060048201819052602482015260008051602061122f833981519152604482015290519081900360640190fd5b80610f6381600163ffffffff61104b16565b6004541015610fa35760405162461bcd60e51b81526004018080602001828103825260358152602001806111d06035913960400191505060405180910390fd5b600454610fb6908363ffffffff6110ac16565b60049081556001546040805163a9059cbb60e01b81526001600160a01b0387811694820194909452602481018690529051929091169163a9059cbb916044808201926020929091908290030181600087803b15801561101457600080fd5b505af1158015611028573d6000803e3d6000fd5b505050506040513d602081101561103e57600080fd5b505161104657fe5b505050565b6000828201838110156110a5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082821115611103576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6001600160a01b03811661114e5760405162461bcd60e51b81526004018080602001828103825260268152602001806111aa6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416d6f756e74207265717565737465642069732067726561746572207468616e20776974686472617761626c652062616c616e63654e6f7420616e20617574686f72697a6564206e6f646520746f2066756c66696c6c2072657175657374734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220416fc850aae46cd717f9279336778cd2e6ab5d10f54530c24c6bd8ac432a4d7a64736f6c63430006060033",
  "deployedSourceMap": "680:10220:9:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;680:10220:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;9523:110:9;;;:::i;:::-;;;;-1:-1:-1;;;;;9523:110:9;;;;;;;;;;;;;;2752:1063;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;2752:1063:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2752:1063:9;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;2752:1063:9;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2752:1063:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2752:1063:9;;-1:-1:-1;2752:1063:9;-1:-1:-1;2752:1063:9;:::i;:::-;;4701:1394;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;4701:1394:9;;;;;;;;-1:-1:-1;;;;;4701:1394:9;;;;;;-1:-1:-1;;;;;;4701:1394:9;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;859:47;;;:::i;:::-;;;;;;;;;;;;;;;;7797:232;;;:::i;8618:690::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;8618:690:9;;;;;;;;-1:-1:-1;;;;;;8618:690:9;;;;;;;;;;:::i;6734:170::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6734:170:9;;;;;;;;;;:::i;893:71:7:-;;;:::i;1212:84::-;;;:::i;750:663:0:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;750:663:0;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;750:663:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;750:663:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;750:663:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;750:663:0;;-1:-1:-1;750:663:0;;-1:-1:-1;;;;;750:663:0:i;6304:167:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6304:167:9;-1:-1:-1;;;;;6304:167:9;;:::i;1435:101:7:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1435:101:7;-1:-1:-1;;;;;1435:101:7;;:::i;7233:310:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;7233:310:9;;;;;;;;:::i;9523:110::-;9616:9;;-1:-1:-1;;;;;9616:9:9;9523:110;:::o;2752:1063::-;1598:19:0;:17;:19::i;:::-;-1:-1:-1;;;;;1584:33:0;:10;-1:-1:-1;;;;;1584:33:0;;1576:65;;;;;-1:-1:-1;;;1576:65:0;;;;;;;;;;;;-1:-1:-1;;;1576:65:0;;;;;;;;;;;;;;;10842:9:9::1;::::0;3059:16;;-1:-1:-1;;;;;10827:25:9;;::::1;10842:9:::0;::::1;10827:25;;10819:61;;;::::0;;-1:-1:-1;;;10819:61:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3117:33:::2;::::0;;-1:-1:-1;;3117:33:9::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3117:33:9;;;;;;3107:44;;;;::::2;::::0;;;;3087:17:::2;3169:22:::0;;;:11:::2;:22:::0;;;;;;;:27;3161:60:::2;;;::::0;;-1:-1:-1;;;3161:60:9;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;3161:60:9;;;;;;;;;;;;;::::2;;3285:18;3306:20;:3;897:9;3306:20;:7;:20;:::i;:::-;3285:41;;3419:8;3445:16;3479:19;3516:10;3385:155;;;;;;;;;;;-1:-1:-1::0;;;;;3385:155:9::2;-1:-1:-1::0;;;;;3385:155:9::2;;;;;;;;-1:-1:-1::0;;;;;3385:155:9::2;;-1:-1:-1::0;;;;;3385:155:9::2;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3385:155:9;;;3362:188;;;;;;3337:11;:22;3349:9;3337:22;;;;;;;;;;;:213;;;;3593:7;3566:242;3614:7;3635:9;3658:8;3680:16;3710:19;3743:10;3767:12;3793:5;;3566:242;;;;-1:-1:-1::0;;;;;3566:242:9::2;-1:-1:-1::0;;;;;3566:242:9::2;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3566:242:9::2;-1:-1:-1::0;;;;;3566:242:9::2;;;;;;-1:-1:-1::0;;;;;3566:242:9::2;;-1:-1:-1::0;;;;;3566:242:9::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;;::::2;74:27:::0;3566:242:9::2;::::0;137:4:-1::2;117:14:::0;;::::2;-1:-1:::0;;113:30:::2;157:16:::0;;::::2;3566:242:9::0;;::::2;::::0;-1:-1:-1;3566:242:9;;-1:-1:-1;;;;;;;;;;;3566:242:9::2;10890:1;;1647::0::1;2752:1063:9::0;;;;;;;;;:::o;4701:1394::-;10521:10;5026:4;10505:27;;;:15;:27;;;;;;;;;:52;;;10550:7;:5;:7::i;:::-;-1:-1:-1;;;;;10536:21:9;:10;-1:-1:-1;;;;;10536:21:9;;10505:52;10484:141;;;;-1:-1:-1;;;10484:141:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10270:23:::1;::::0;;;:11:::1;:23;::::0;;;;;4997:10;;10262:68:::1;;;::::0;;-1:-1:-1;;;10262:68:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5090:156:::2;::::0;;::::2;::::0;;::::2;::::0;;;-1:-1:-1;;5090:156:9::2;::::0;;;;;;;;-1:-1:-1;;;;;;5090:156:9;::::2;::::0;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;5090:156:9;;;;;;5067:189;;;;::::2;::::0;;;;5046:18:::2;5287:23:::0;;;:11:::2;:23:::0;;;;;;;:37;::::2;5266:114;;;::::0;;-1:-1:-1;;;5266:114:9;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;5411:18;::::0;:32:::2;::::0;5434:8;5411:32:::2;:22;:32;:::i;:::-;5390:18;:53:::0;5460:23:::2;::::0;;;:11:::2;:23;::::0;;;;5453:30;966:6:::2;5514:9;:39;;5493:118;;;::::0;;-1:-1:-1;;;5493:118:9;;::::2;;::::0;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;;;;;;::::2;;5946:62;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;5946:62:9;;;;;;::::2;25:18:-1::0;::::2;61:17:::0;;-1:-1;;;;;182:15:::2;-1:-1:::0;;;;;;5946:62:9;::::2;179:29:-1;160:49:::0;;5911:107:9;;;;5893:12:::2;::::0;-1:-1:-1;;;;;5911:21:9;::::2;::::0;5946:62;5911:107;;;25:18:-1;5911:107:9;;25:18:-1;36:153:::2;66:2;61:3;58:11;36:153;;176:10:::0;;164:23;;-1:-1;;139:12;;;;98:2:::2;89:12:::0;;::::2;::::0;114::::2;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5911:107:9;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1:::0;5892:126:9;;4701:1394;-1:-1:-1;;;;;;;;;;;4701:1394:9:o;859:47::-;897:9;859:47;:::o;7797:232::-;7941:7;1079:9:7;:7;:9::i;:::-;1071:54;;;;;-1:-1:-1;;;1071:54:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1071:54:7;;;;;;;;;;;;;;;7971:18:9::1;::::0;:51:::1;::::0;1139:1:::1;7971:51;:22;:51;:::i;:::-;7964:58;;7797:232:::0;:::o;8618:690::-;8838:66;;;;;;;;;;8865:10;8838:66;;;;;;-1:-1:-1;;;;;;8838:66:9;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;8838:66:9;;;;;;8815:99;;;;;;;;;8794:18;8959:23;;;:11;:23;;;;;;;8945:37;;8924:114;;;;;-1:-1:-1;;;8924:114:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;9125:3;9110:11;:18;;9102:53;;;;;-1:-1:-1;;;9102:53:9;;;;;;;;;;;;-1:-1:-1;;;9102:53:9;;;;;;;;;;;;;;;9173:23;;;;:11;:23;;;;;;9166:30;;;9211:31;9185:10;;9211:31;;;9260:9;;:40;;;-1:-1:-1;;;9260:40:9;;9279:10;9260:40;;;;;;;;;;;;-1:-1:-1;;;;;9260:9:9;;;;:18;;:40;;;;;;;;;;;;;;;:9;;:40;;;2:2:-1;;;;27:1;24;17:12;2:2;9260:40:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9260:40:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;9260:40:9;9253:48;;;;8618:690;;;;;:::o;6734:170::-;1079:9:7;:7;:9::i;:::-;1071:54;;;;;-1:-1:-1;;;1071:54:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1071:54:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;6864:22:9;;;::::1;;::::0;;;:15:::1;:22;::::0;;;;:33;;-1:-1:-1;;6864:33:9::1;::::0;::::1;;::::0;;;::::1;::::0;;6734:170::o;893:71:7:-;931:7;953:6;-1:-1:-1;;;;;953:6:7;893:71;:::o;1212:84::-;1252:4;1285:6;-1:-1:-1;;;;;1285:6:7;1271:10;:20;;1212:84::o;750:663:0:-;1598:19;:17;:19::i;:::-;-1:-1:-1;;;;;1584:33:0;:10;-1:-1:-1;;;;;1584:33:0;;1576:65;;;;;-1:-1:-1;;;1576:65:0;;;;;;;;;;;;-1:-1:-1;;;1576:65:0;;;;;;;;;;;;;;;2310:12;;892:5;;315:47;-1:-1:-1;2310:38:0::1;2302:73;;;::::0;;-1:-1:-1;;;2302:73:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2302:73:0;;;;;;;;;;;;;::::1;;2006:2:::2;1995:14:::0;::::2;1989:21:::0;929:5;;-1:-1:-1;;;;;;2029:39:0;::::2;-1:-1:-1::0;;;2029:39:0::2;2021:82;;;::::0;;-1:-1:-1;;;2021:82:0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;1041:7:::3;1036:2;1029:5;1025:14;1018:31;1171:7;1166:2;1159:5;1155:14;1148:31;1284:12;1310:4;-1:-1:-1::0;;;;;1302:26:0::3;1329:5;1302:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10:::0;;164:23;;-1:-1;;139:12;;;;98:2:::3;89:12:::0;;::::3;::::0;114::::3;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1302:33:0;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;1283:52:0;;;1372:7;1364:44;;;::::0;;-1:-1:-1;;;1364:44:0;;::::3;;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;;;;;;;;;;::::3;;2109:1;2381::::2;;1647::::1;750:663:::0;;;:::o;6304:167:9:-;-1:-1:-1;;;;;6442:22:9;6415:4;6442:22;;;:15;:22;;;;;;;;;6304:167::o;1435:101:7:-;1079:9;:7;:9::i;:::-;1071:54;;;;;-1:-1:-1;;;1071:54:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1071:54:7;;;;;;;;;;;;;;;1503:28:::1;1522:8;1503:18;:28::i;:::-;1435:101:::0;:::o;7233:310:9:-;1079:9:7;:7;:9::i;:::-;1071:54;;;;;-1:-1:-1;;;1071:54:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1071:54:7;;;;;;;;;;;;;;;7404:7:9;9921:40:::1;7404:7:::0;1139:1:::1;9921:40;:11;:40;:::i;:::-;9899:18;;:62;;9878:162;;;;-1:-1:-1::0;;;9878:162:9::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7448:18:::2;::::0;:31:::2;::::0;7471:7;7448:31:::2;:22;:31;:::i;:::-;7427:18;:52:::0;;;7496:9:::2;::::0;:39:::2;::::0;;-1:-1:-1;;;7496:39:9;;-1:-1:-1;;;;;7496:39:9;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;:9;;;::::2;::::0;:18:::2;::::0;:39;;;;;::::2;::::0;;;;;;;;;:9:::2;::::0;:39;::::2;;2:2:-1::0;::::2;;;27:1;24::::0;17:12:::2;2:2;7496:39:9;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;7496:39:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;7496:39:9;7489:47:::2;;;;1131:1:7::1;7233:310:9::0;;:::o;863:162:8:-;921:7;948:5;;;967:6;;;;959:46;;;;;-1:-1:-1;;;959:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:1;863:162;-1:-1:-1;;;863:162:8:o;1277:165::-;1335:7;1363:1;1358;:6;;1350:49;;;;;-1:-1:-1;;;1350:49:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1417:5:8;;;1277:165::o;1629:211:7:-;-1:-1:-1;;;;;1698:22:7;;1690:73;;;;-1:-1:-1;;;1690:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:6;;;1774:38;;-1:-1:-1;;;;;1774:38:7;;;;1795:6;;;1774:38;;;1818:6;:17;;-1:-1:-1;;;;;;1818:17:7;-1:-1:-1;;;;;1818:17:7;;;;;;;;;;1629:211::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "cancelOracleRequest(bytes32,uint256,bytes4,uint256)": {
        "details": "Given params must hash to a commitment stored on the contract in order for the request to be valid Emits CancelOracleRequest event.",
        "notice": "Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK sent for the request back to the requester's address.",
        "params": {
          "_callbackFunc": "The requester's specified callback address",
          "_expiration": "The time of the expiration for the request",
          "_payment": "The amount of payment given (specified in wei)",
          "_requestId": "The request ID"
        }
      },
      "constructor": {
        "details": "Sets the LinkToken address for the imported LinkTokenInterface",
        "params": {
          "_link": "The address of the LINK token"
        }
      },
      "fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)": {
        "details": "Given params must hash back to the commitment stored from `oracleRequest`. Will call the callback address' callback function without bubbling up error checking in a `require` so that the node can get paid.",
        "notice": "Called by the Chainlink node to fulfill requests",
        "params": {
          "_callbackAddress": "The callback address to call for fulfillment",
          "_callbackFunctionId": "The callback function ID to use for fulfillment",
          "_data": "The data to return to the consuming contract",
          "_expiration": "The expiration that the node should respond by before the requester can cancel",
          "_payment": "The payment amount that will be released for the oracle (specified in wei)",
          "_requestId": "The fulfillment request ID that must match the requester's"
        },
        "returns": {
          "_0": "Status if the external call was successful"
        }
      },
      "getAuthorizationStatus(address)": {
        "notice": "Use this to check if a node is authorized for fulfilling requests",
        "params": {
          "_node": "The address of the Chainlink node"
        },
        "returns": {
          "_0": "The authorization status of the node"
        }
      },
      "getChainlinkToken()": {
        "details": "This is the public implementation for chainlinkTokenAddress, which is an internal method of the ChainlinkClient contract",
        "notice": "Returns the address of the LINK token"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "details": "The data payload's first 2 words will be overwritten by the `_sender` and `_amount` values to ensure correctness. Calls oracleRequest.",
        "notice": "Called when LINK is sent to the contract via `transferAndCall`",
        "params": {
          "_amount": "Amount of LINK sent (specified in wei)",
          "_data": "Payload of the transaction",
          "_sender": "Address of the sender"
        }
      },
      "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": {
        "details": "Stores the hash of the params as the on-chain commitment for the request. Emits OracleRequest event for the Chainlink node to detect.",
        "notice": "Creates the Chainlink request",
        "params": {
          "_callbackAddress": "The callback address for the response",
          "_callbackFunctionId": "The callback function ID for the response",
          "_data": "The CBOR payload of the request",
          "_dataVersion": "The specified data version",
          "_nonce": "The nonce sent by the requester",
          "_payment": "The amount of payment given (specified in wei)",
          "_sender": "The sender of the request",
          "_specId": "The Job Specification ID"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "setFulfillmentPermission(address,bool)": {
        "notice": "Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow.",
        "params": {
          "_allowed": "Bool value to determine if the node can fulfill requests",
          "_node": "The address of the Chainlink node"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address,uint256)": {
        "details": "The owner of the contract can be another wallet and does not have to be a Chainlink node",
        "notice": "Allows the node operator to withdraw earned LINK to a given address",
        "params": {
          "_amount": "The amount to send (specified in wei)",
          "_recipient": "The address to send the LINK token to"
        }
      },
      "withdrawable()": {
        "details": "We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage",
        "notice": "Displays the amount of LINK that is available for the node operator to withdraw",
        "returns": {
          "_0": "The amount of withdrawable LINK on the contract"
        }
      }
    },
    "notice": "Node operators can deploy this contract to fulfill requests sent to them",
    "title": "The Chainlink Oracle contract"
  },
  "offset": [
    680,
    10900
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FCD56DB GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA4C0ED36 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xD3E9C314 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3AD JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x7FCD56DB EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x29E JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x165D35E1 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x40429946 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x4AB0D190 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x4B602282 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x50188301 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x6EE4D553 EQ PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP2 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH2 0x100 DUP2 ADD PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xDC PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xC6C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3F0 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x44B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x26BAB9BA103AB9B2902624A725903A37B5B2B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616C6C6261636B20746F204C494E4B000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP14 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x54A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081D5CD94818481D5B9A5C5D59481251 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x55E TIMESTAMP PUSH2 0x12C PUSH4 0xFFFFFFFF PUSH2 0x104B AND JUMP JUMPDEST SWAP1 POP DUP11 DUP10 DUP10 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x4 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP10 PUSH32 0xD8D7ECC4800D25FA53CE0372F13A416D98907A7EF3D8D3BDD79CF4FE75529C65 DUP14 DUP5 DUP15 DUP14 DUP14 DUP8 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP13 POP SWAP1 SWAP11 POP POP POP POP POP POP POP POP POP POP POP LOG2 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x6F4 JUMPI POP PUSH2 0x6DF PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1205 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP8 SWAP1 PUSH2 0x791 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206861766520612076616C6964207265717565737449640000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP11 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP11 SWAP1 SHL AND DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 AND PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x58 DUP1 DUP4 ADD DUP9 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x78 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD DUP2 EQ PUSH2 0x848 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506172616D7320646F206E6F74206D6174636820726571756573742049440000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x85B SWAP1 DUP10 PUSH4 0xFFFFFFFF PUSH2 0x104B AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH3 0x61A80 GAS LT ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742070726F7669646520636F6E73756D657220656E6F75676820676173 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x24 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP11 AND OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x940 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C8 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xA07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x122F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xA1B SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x10AC AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE CALLER PUSH1 0x60 SHL DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x58 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x78 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD DUP2 EQ PUSH2 0xAC7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506172616D7320646F206E6F74206D6174636820726571756573742049440000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 GT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995C5D595CDD081A5CC81B9BDD08195E1C1A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP7 SWAP2 PUSH32 0xA7842B9EC549398102C0D91B1B9919B2F20558AEFDADF57528A95C6CD3292E93 SWAP2 LOG2 PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBD3 JUMPI INVALID JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBE2 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xC21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x122F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0xC74 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCCF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x26BAB9BA103AB9B2902624A725903A37B5B2B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 SWAP1 PUSH1 0x44 GT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x92DCECC2D8D2C840E4CAE2EACAE6E840D8CADCCEE8D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x20214CA3 PUSH1 0xE1 SHL EQ PUSH2 0xD8D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374207573652077686974656C69737465642066756E6374696F6E730000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x24 DUP6 ADD MSTORE DUP5 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xDD5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE35 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE90 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2063726561746520726571756573740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xEBF PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xEFE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x122F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xF07 DUP2 PUSH2 0x1109 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF12 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xF51 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x122F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xF63 DUP2 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x104B AND JUMP JUMPDEST PUSH1 0x4 SLOAD LT ISZERO PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11D0 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFB6 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x10AC AND JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x103E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1046 JUMPI INVALID JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x10A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1103 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11AA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416D6F756E7420726571756573746564 KECCAK256 PUSH10 0x73206772656174657220 PUSH21 0x68616E20776974686472617761626C652062616C61 PUSH15 0x63654E6F7420616E20617574686F72 PUSH10 0x7A6564206E6F64652074 PUSH16 0x2066756C66696C6C2072657175657374 PUSH20 0x4F776E61626C653A2063616C6C6572206973206E PUSH16 0x7420746865206F776E6572A264697066 PUSH20 0x58221220416FC850AAE46CD717F9279336778CD2 0xE6 0xAB 0x5D LT CREATE2 GASLIMIT ADDRESS 0xC2 0x4C PUSH12 0xD8AC432A4D7A64736F6C6343 STOP MOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        680,
        10900
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        680,
        10900
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x7FCD56DB"
    },
    "38": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "GT",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA4C0ED36"
    },
    "49": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "GT",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA4C0ED36"
    },
    "60": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A6"
    },
    "64": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xD3E9C314"
    },
    "71": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x361"
    },
    "75": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "83": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x387"
    },
    "86": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "88": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xF3FEF3A3"
    },
    "93": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "94": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3AD"
    },
    "97": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "98": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMP",
      "path": "9"
    },
    "102": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "103": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "104": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x7FCD56DB"
    },
    "109": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "110": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x268"
    },
    "113": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "114": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "115": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8DA5CB5B"
    },
    "120": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "121": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x296"
    },
    "124": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x8F32D59B"
    },
    "131": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "132": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x29E"
    },
    "135": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "136": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMP",
      "path": "9"
    },
    "140": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "141": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "142": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x165D35E1"
    },
    "147": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "148": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "152": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "153": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x40429946"
    },
    "158": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "159": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF8"
    },
    "162": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "163": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "164": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x4AB0D190"
    },
    "169": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "170": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AB"
    },
    "173": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "174": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "175": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x4B602282"
    },
    "180": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "181": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20D"
    },
    "184": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "185": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "186": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x50188301"
    },
    "191": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "192": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x227"
    },
    "195": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "196": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "DUP1",
      "path": "9"
    },
    "197": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6EE4D553"
    },
    "202": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "EQ",
      "path": "9"
    },
    "203": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x22F"
    },
    "206": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "207": {
      "fn": null,
      "offset": [
        680,
        10900
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "210": {
      "op": "DUP1"
    },
    "211": {
      "first_revert": true,
      "op": "REVERT"
    },
    "212": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "213": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDC"
    },
    "216": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3D9"
    },
    "219": {
      "fn": "Oracle.getChainlinkToken",
      "jump": "i",
      "offset": [
        9523,
        9633
      ],
      "op": "JUMP",
      "path": "9"
    },
    "220": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "221": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "223": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "DUP1",
      "path": "9"
    },
    "224": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "231": {
      "op": "SHL"
    },
    "232": {
      "op": "SUB"
    },
    "233": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "234": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "235": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "AND",
      "path": "9"
    },
    "236": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "DUP3",
      "path": "9"
    },
    "237": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "238": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "239": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "240": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "DUP2",
      "path": "9"
    },
    "241": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "242": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "SUB",
      "path": "9"
    },
    "243": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "245": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "ADD",
      "path": "9"
    },
    "246": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "247": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "RETURN",
      "path": "9"
    },
    "248": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "249": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A9"
    },
    "252": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "254": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP1",
      "path": "9"
    },
    "255": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "256": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SUB",
      "path": "9"
    },
    "257": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "260": {
      "op": "DUP2"
    },
    "261": {
      "op": "LT"
    },
    "262": {
      "op": "ISZERO"
    },
    "263": {
      "op": "PUSH2",
      "value": "0x10F"
    },
    "266": {
      "op": "JUMPI"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "269": {
      "op": "DUP1"
    },
    "270": {
      "op": "REVERT"
    },
    "271": {
      "op": "JUMPDEST"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "278": {
      "op": "SHL"
    },
    "279": {
      "op": "SUB"
    },
    "280": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP3",
      "path": "9"
    },
    "281": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "282": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP2",
      "path": "9"
    },
    "283": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "AND",
      "path": "9"
    },
    "284": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "285": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "287": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP2",
      "path": "9"
    },
    "288": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "289": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "290": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "291": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "293": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP3",
      "path": "9"
    },
    "294": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "295": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "296": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "297": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "299": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP4",
      "path": "9"
    },
    "300": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "301": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "302": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "AND",
      "path": "9"
    },
    "303": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "SUB"
    },
    "312": {
      "op": "NOT"
    },
    "313": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "315": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP3",
      "path": "9"
    },
    "316": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "317": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "318": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "AND",
      "path": "9"
    },
    "319": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "320": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "322": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP3",
      "path": "9"
    },
    "323": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "324": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "325": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "326": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC0"
    },
    "328": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP2",
      "path": "9"
    },
    "329": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "330": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "331": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "332": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP2",
      "path": "9"
    },
    "333": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "334": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "335": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "338": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP2",
      "path": "9"
    },
    "339": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "340": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "342": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP3",
      "path": "9"
    },
    "343": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "344": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "345": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "351": {
      "op": "DUP2"
    },
    "352": {
      "op": "GT"
    },
    "353": {
      "op": "ISZERO"
    },
    "354": {
      "op": "PUSH2",
      "value": "0x16A"
    },
    "357": {
      "op": "JUMPI"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "360": {
      "op": "DUP1"
    },
    "361": {
      "op": "REVERT"
    },
    "362": {
      "op": "JUMPDEST"
    },
    "363": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP3",
      "path": "9"
    },
    "364": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "365": {
      "op": "DUP4"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "368": {
      "op": "DUP3"
    },
    "369": {
      "op": "ADD"
    },
    "370": {
      "op": "GT"
    },
    "371": {
      "op": "ISZERO"
    },
    "372": {
      "op": "PUSH2",
      "value": "0x17C"
    },
    "375": {
      "op": "JUMPI"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "378": {
      "op": "DUP1"
    },
    "379": {
      "op": "REVERT"
    },
    "380": {
      "op": "JUMPDEST"
    },
    "381": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "DUP1",
      "path": "9"
    },
    "382": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "383": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "384": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "386": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "ADD",
      "path": "9"
    },
    "387": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "388": {
      "op": "DUP5"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "DUP4"
    },
    "392": {
      "op": "MUL"
    },
    "393": {
      "op": "DUP5"
    },
    "394": {
      "op": "ADD"
    },
    "395": {
      "op": "GT"
    },
    "396": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "402": {
      "op": "DUP4"
    },
    "403": {
      "op": "GT"
    },
    "404": {
      "op": "OR"
    },
    "405": {
      "op": "ISZERO"
    },
    "406": {
      "op": "PUSH2",
      "value": "0x19E"
    },
    "409": {
      "op": "JUMPI"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "412": {
      "op": "DUP1"
    },
    "413": {
      "op": "REVERT"
    },
    "414": {
      "op": "JUMPDEST"
    },
    "415": {
      "op": "POP"
    },
    "416": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "417": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "418": {
      "op": "POP"
    },
    "419": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "420": {
      "op": "POP"
    },
    "421": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3E8"
    },
    "424": {
      "fn": "Oracle.oracleRequest",
      "jump": "i",
      "offset": [
        2752,
        3815
      ],
      "op": "JUMP",
      "path": "9"
    },
    "425": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "426": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "STOP",
      "path": "9"
    },
    "427": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "428": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F9"
    },
    "431": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "433": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP1",
      "path": "9"
    },
    "434": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "435": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SUB",
      "path": "9"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "438": {
      "op": "DUP2"
    },
    "439": {
      "op": "LT"
    },
    "440": {
      "op": "ISZERO"
    },
    "441": {
      "op": "PUSH2",
      "value": "0x1C1"
    },
    "444": {
      "op": "JUMPI"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "447": {
      "op": "DUP1"
    },
    "448": {
      "op": "REVERT"
    },
    "449": {
      "op": "JUMPDEST"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP1",
      "path": "9"
    },
    "452": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "453": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "454": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "456": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP2",
      "path": "9"
    },
    "457": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "ADD",
      "path": "9"
    },
    "458": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "459": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "466": {
      "op": "SHL"
    },
    "467": {
      "op": "SUB"
    },
    "468": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "470": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP3",
      "path": "9"
    },
    "471": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "ADD",
      "path": "9"
    },
    "472": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "473": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "AND",
      "path": "9"
    },
    "474": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "op": "SUB"
    },
    "483": {
      "op": "NOT"
    },
    "484": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "486": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP3",
      "path": "9"
    },
    "487": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "ADD",
      "path": "9"
    },
    "488": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "489": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "AND",
      "path": "9"
    },
    "490": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "491": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "493": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP2",
      "path": "9"
    },
    "494": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "ADD",
      "path": "9"
    },
    "495": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "496": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "497": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA0"
    },
    "499": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "ADD",
      "path": "9"
    },
    "500": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "501": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6BE"
    },
    "504": {
      "fn": "Oracle.fulfillOracleRequest",
      "jump": "i",
      "offset": [
        4701,
        6095
      ],
      "op": "JUMP",
      "path": "9"
    },
    "505": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "506": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "508": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP1",
      "path": "9"
    },
    "509": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "510": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "511": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "512": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "513": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP3",
      "path": "9"
    },
    "514": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "515": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "516": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "517": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "DUP2",
      "path": "9"
    },
    "518": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "519": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SUB",
      "path": "9"
    },
    "520": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "522": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "ADD",
      "path": "9"
    },
    "523": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "524": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "RETURN",
      "path": "9"
    },
    "525": {
      "offset": [
        859,
        906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "526": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x215"
    },
    "529": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9B8"
    },
    "532": {
      "fn": "Oracle.fulfillOracleRequest",
      "jump": "i",
      "offset": [
        859,
        906
      ],
      "op": "JUMP",
      "path": "9"
    },
    "533": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "534": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "536": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "DUP1",
      "path": "9"
    },
    "537": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "538": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "539": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "DUP3",
      "path": "9"
    },
    "540": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "541": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "542": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "543": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "DUP2",
      "path": "9"
    },
    "544": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "545": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "SUB",
      "path": "9"
    },
    "546": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "548": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "ADD",
      "path": "9"
    },
    "549": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "550": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        859,
        906
      ],
      "op": "RETURN",
      "path": "9"
    },
    "551": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7797,
        8029
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "552": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7797,
        8029
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x215"
    },
    "555": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7797,
        8029
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9BE"
    },
    "558": {
      "fn": "Oracle.withdrawable",
      "jump": "i",
      "offset": [
        7797,
        8029
      ],
      "op": "JUMP",
      "path": "9"
    },
    "559": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "560": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A9"
    },
    "563": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "565": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "DUP1",
      "path": "9"
    },
    "566": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "567": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "SUB",
      "path": "9"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "570": {
      "op": "DUP2"
    },
    "571": {
      "op": "LT"
    },
    "572": {
      "op": "ISZERO"
    },
    "573": {
      "op": "PUSH2",
      "value": "0x245"
    },
    "576": {
      "op": "JUMPI"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "579": {
      "op": "DUP1"
    },
    "580": {
      "op": "REVERT"
    },
    "581": {
      "op": "JUMPDEST"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "DUP1",
      "path": "9"
    },
    "584": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "585": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "586": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "588": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "DUP2",
      "path": "9"
    },
    "589": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "ADD",
      "path": "9"
    },
    "590": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "591": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "596": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "598": {
      "op": "SHL"
    },
    "599": {
      "op": "SUB"
    },
    "600": {
      "op": "NOT"
    },
    "601": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "603": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "DUP3",
      "path": "9"
    },
    "604": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "ADD",
      "path": "9"
    },
    "605": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "606": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "AND",
      "path": "9"
    },
    "607": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "608": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "610": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "ADD",
      "path": "9"
    },
    "611": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "612": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA20"
    },
    "615": {
      "fn": "Oracle.cancelOracleRequest",
      "jump": "i",
      "offset": [
        8618,
        9308
      ],
      "op": "JUMP",
      "path": "9"
    },
    "616": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "617": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A9"
    },
    "620": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "622": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "DUP1",
      "path": "9"
    },
    "623": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "624": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "SUB",
      "path": "9"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "627": {
      "op": "DUP2"
    },
    "628": {
      "op": "LT"
    },
    "629": {
      "op": "ISZERO"
    },
    "630": {
      "op": "PUSH2",
      "value": "0x27E"
    },
    "633": {
      "op": "JUMPI"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "636": {
      "op": "DUP1"
    },
    "637": {
      "op": "REVERT"
    },
    "638": {
      "op": "JUMPDEST"
    },
    "639": {
      "op": "POP"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "646": {
      "op": "SHL"
    },
    "647": {
      "op": "SUB"
    },
    "648": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "DUP2",
      "path": "9"
    },
    "649": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "650": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "AND",
      "path": "9"
    },
    "651": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "652": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "654": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "ADD",
      "path": "9"
    },
    "655": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "656": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "657": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "658": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBDA"
    },
    "661": {
      "fn": "Oracle.setFulfillmentPermission",
      "jump": "i",
      "offset": [
        6734,
        6904
      ],
      "op": "JUMP",
      "path": "9"
    },
    "662": {
      "fn": "Ownable.owner",
      "offset": [
        893,
        964
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "663": {
      "fn": "Ownable.owner",
      "offset": [
        893,
        964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDC"
    },
    "666": {
      "fn": "Ownable.owner",
      "offset": [
        893,
        964
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC4C"
    },
    "669": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        893,
        964
      ],
      "op": "JUMP",
      "path": "7"
    },
    "670": {
      "fn": "Ownable.isOwner",
      "offset": [
        1212,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "671": {
      "fn": "Ownable.isOwner",
      "offset": [
        1212,
        1296
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F9"
    },
    "674": {
      "fn": "Ownable.isOwner",
      "offset": [
        1212,
        1296
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC5B"
    },
    "677": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        1212,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    },
    "678": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "682": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "684": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "685": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "686": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SUB",
      "path": "0"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "689": {
      "op": "DUP2"
    },
    "690": {
      "op": "LT"
    },
    "691": {
      "op": "ISZERO"
    },
    "692": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "695": {
      "op": "JUMPI"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "698": {
      "op": "DUP1"
    },
    "699": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1371
      ],
      "op": "REVERT",
      "path": "0"
    },
    "700": {
      "op": "JUMPDEST"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "707": {
      "op": "SHL"
    },
    "708": {
      "op": "SUB"
    },
    "709": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "710": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "711": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "AND",
      "path": "0"
    },
    "712": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "713": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "715": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "716": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "717": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "718": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "719": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "720": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "721": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "722": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "724": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "725": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "726": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "728": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "729": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "730": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "731": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "737": {
      "op": "DUP2"
    },
    "738": {
      "op": "GT"
    },
    "739": {
      "op": "ISZERO"
    },
    "740": {
      "op": "PUSH2",
      "value": "0x2EC"
    },
    "743": {
      "op": "JUMPI"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "746": {
      "op": "DUP1"
    },
    "747": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1371
      ],
      "op": "REVERT",
      "path": "0"
    },
    "748": {
      "op": "JUMPDEST"
    },
    "749": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "750": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "751": {
      "op": "DUP4"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "754": {
      "op": "DUP3"
    },
    "755": {
      "op": "ADD"
    },
    "756": {
      "op": "GT"
    },
    "757": {
      "op": "ISZERO"
    },
    "758": {
      "op": "PUSH2",
      "value": "0x2FE"
    },
    "761": {
      "op": "JUMPI"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "764": {
      "op": "DUP1"
    },
    "765": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1371
      ],
      "op": "REVERT",
      "path": "0"
    },
    "766": {
      "op": "JUMPDEST"
    },
    "767": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "768": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "769": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "770": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "772": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "773": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "774": {
      "op": "DUP5"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "777": {
      "op": "DUP4"
    },
    "778": {
      "op": "MUL"
    },
    "779": {
      "op": "DUP5"
    },
    "780": {
      "op": "ADD"
    },
    "781": {
      "op": "GT"
    },
    "782": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "788": {
      "op": "DUP4"
    },
    "789": {
      "op": "GT"
    },
    "790": {
      "op": "OR"
    },
    "791": {
      "op": "ISZERO"
    },
    "792": {
      "op": "PUSH2",
      "value": "0x320"
    },
    "795": {
      "op": "JUMPI"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "798": {
      "op": "DUP1"
    },
    "799": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1371
      ],
      "op": "REVERT",
      "path": "0"
    },
    "800": {
      "op": "JUMPDEST"
    },
    "801": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "802": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "803": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "804": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "805": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "807": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "808": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "810": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "811": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "812": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DIV",
      "path": "0"
    },
    "813": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "MUL",
      "path": "0"
    },
    "814": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "816": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "817": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "819": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "820": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "821": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "822": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "823": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "825": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "826": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "827": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "828": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "829": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "830": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "831": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "832": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "833": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "834": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "836": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "ADD",
      "path": "0"
    },
    "837": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP4",
      "path": "0"
    },
    "838": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "DUP4",
      "path": "0"
    },
    "839": {
      "op": "DUP1"
    },
    "840": {
      "op": "DUP3"
    },
    "841": {
      "op": "DUP5"
    },
    "842": {
      "op": "CALLDATACOPY"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "845": {
      "op": "SWAP3"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "SWAP2"
    },
    "848": {
      "op": "SWAP1"
    },
    "849": {
      "op": "SWAP2"
    },
    "850": {
      "op": "MSTORE"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "853": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6C"
    },
    "858": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "jump": "i",
      "offset": [
        750,
        1413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "865": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "866": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F9"
    },
    "869": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "871": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "DUP1",
      "path": "9"
    },
    "872": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "873": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "SUB",
      "path": "9"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "876": {
      "op": "DUP2"
    },
    "877": {
      "op": "LT"
    },
    "878": {
      "op": "ISZERO"
    },
    "879": {
      "op": "PUSH2",
      "value": "0x377"
    },
    "882": {
      "op": "JUMPI"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "885": {
      "op": "DUP1"
    },
    "886": {
      "op": "REVERT"
    },
    "887": {
      "op": "JUMPDEST"
    },
    "888": {
      "op": "POP"
    },
    "889": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "op": "SUB"
    },
    "898": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "AND",
      "path": "9"
    },
    "899": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE99"
    },
    "902": {
      "fn": "Oracle.getAuthorizationStatus",
      "jump": "i",
      "offset": [
        6304,
        6471
      ],
      "op": "JUMP",
      "path": "9"
    },
    "903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A9"
    },
    "907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "DUP1",
      "path": "7"
    },
    "910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "SUB",
      "path": "7"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "914": {
      "op": "DUP2"
    },
    "915": {
      "op": "LT"
    },
    "916": {
      "op": "ISZERO"
    },
    "917": {
      "op": "PUSH2",
      "value": "0x39D"
    },
    "920": {
      "op": "JUMPI"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "923": {
      "op": "DUP1"
    },
    "924": {
      "op": "REVERT"
    },
    "925": {
      "op": "JUMPDEST"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "op": "SUB"
    },
    "936": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "AND",
      "path": "7"
    },
    "937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB7"
    },
    "940": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1435,
        1536
      ],
      "op": "JUMP",
      "path": "7"
    },
    "941": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "942": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A9"
    },
    "945": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "947": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "DUP1",
      "path": "9"
    },
    "948": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "949": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "SUB",
      "path": "9"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "952": {
      "op": "DUP2"
    },
    "953": {
      "op": "LT"
    },
    "954": {
      "op": "ISZERO"
    },
    "955": {
      "op": "PUSH2",
      "value": "0x3C3"
    },
    "958": {
      "op": "JUMPI"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "961": {
      "op": "DUP1"
    },
    "962": {
      "op": "REVERT"
    },
    "963": {
      "op": "JUMPDEST"
    },
    "964": {
      "op": "POP"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "971": {
      "op": "SHL"
    },
    "972": {
      "op": "SUB"
    },
    "973": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "DUP2",
      "path": "9"
    },
    "974": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "975": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "AND",
      "path": "9"
    },
    "976": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "977": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "979": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "ADD",
      "path": "9"
    },
    "980": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "981": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF0A"
    },
    "984": {
      "fn": "Oracle.withdraw",
      "jump": "i",
      "offset": [
        7233,
        7543
      ],
      "op": "JUMP",
      "path": "9"
    },
    "985": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "986": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9616,
        9625
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 0,
      "value": "0x1"
    },
    "988": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9616,
        9625
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9616,
        9625
      ],
      "op": "AND",
      "path": "9"
    },
    "998": {
      "fn": "Oracle.getChainlinkToken",
      "offset": [
        9523,
        9633
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "999": {
      "fn": "Oracle.getChainlinkToken",
      "jump": "o",
      "offset": [
        9523,
        9633
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1000": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1001": {
      "offset": [
        1598,
        1617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1004": {
      "offset": [
        1598,
        1615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "1007": {
      "jump": "i",
      "offset": [
        1598,
        1617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1008": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1598,
        1617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1015": {
      "op": "SHL"
    },
    "1016": {
      "op": "SUB"
    },
    "1017": {
      "offset": [
        1584,
        1617
      ],
      "op": "AND",
      "path": "0"
    },
    "1018": {
      "offset": [
        1584,
        1594
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "offset": [
        1584,
        1617
      ],
      "op": "AND",
      "path": "0"
    },
    "1028": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1584,
        1617
      ],
      "op": "EQ",
      "path": "0"
    },
    "1029": {
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "1032": {
      "offset": [
        1576,
        1641
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1033": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1035": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1036": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1037": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1043": {
      "op": "SHL"
    },
    "1044": {
      "offset": [
        1576,
        1641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1045": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1046": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1048": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1050": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1051": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "ADD",
      "path": "0"
    },
    "1052": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1053": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "1055": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1057": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1058": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "ADD",
      "path": "0"
    },
    "1059": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1060": {
      "op": "PUSH19",
      "value": "0x26BAB9BA103AB9B2902624A725903A37B5B2B7"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "1082": {
      "op": "SHL"
    },
    "1083": {
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1085": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1086": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "ADD",
      "path": "0"
    },
    "1087": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1088": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1089": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1090": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1091": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1092": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1093": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "SUB",
      "path": "0"
    },
    "1094": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1096": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "ADD",
      "path": "0"
    },
    "1097": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1098": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1099": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        1576,
        1641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1100": {
      "offset": [
        10842,
        10851
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1102": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10842,
        10851
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1103": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3059,
        3075
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1104": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3059,
        3075
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "offset": [
        10827,
        10852
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1114": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10827,
        10852
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1115": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10827,
        10852
      ],
      "op": "AND",
      "path": "9"
    },
    "1116": {
      "offset": [
        10842,
        10851
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1117": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10842,
        10851
      ],
      "op": "AND",
      "path": "9"
    },
    "1118": {
      "offset": [
        10827,
        10852
      ],
      "op": "EQ",
      "path": "9"
    },
    "1119": {
      "branch": 28,
      "fn": "Oracle.oracleRequest",
      "offset": [
        10827,
        10852
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1120": {
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4B0"
    },
    "1123": {
      "branch": 28,
      "offset": [
        10819,
        10880
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1124": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1126": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1127": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1134": {
      "op": "SHL"
    },
    "1135": {
      "offset": [
        10819,
        10880
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1136": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1137": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1139": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1141": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1142": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "ADD",
      "path": "9"
    },
    "1143": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1144": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x17"
    },
    "1146": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1148": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1149": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "ADD",
      "path": "9"
    },
    "1150": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1151": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x43616E6E6F742063616C6C6261636B20746F204C494E4B000000000000000000"
    },
    "1184": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "1186": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1187": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "ADD",
      "path": "9"
    },
    "1188": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1189": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1190": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1191": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1192": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1193": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1194": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "SUB",
      "path": "9"
    },
    "1195": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "1197": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "ADD",
      "path": "9"
    },
    "1198": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1199": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1200": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10819,
        10880
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1201": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1203": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1204": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1205": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1218": {
      "op": "NOT"
    },
    "1219": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1221": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1222": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1223": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "SHL",
      "path": "9"
    },
    "1224": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "AND",
      "path": "9"
    },
    "1225": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1227": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1228": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1229": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "ADD",
      "path": "9"
    },
    "1230": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1231": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1232": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1233": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1234": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x34"
    },
    "1236": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1237": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1238": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "ADD",
      "path": "9"
    },
    "1239": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP10",
      "path": "9"
    },
    "1240": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1241": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1242": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1243": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1244": {
      "op": "DUP1"
    },
    "1245": {
      "op": "DUP5"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "op": "SWAP1"
    },
    "1248": {
      "op": "SWAP2"
    },
    "1249": {
      "op": "ADD"
    },
    "1250": {
      "op": "DUP2"
    },
    "1251": {
      "op": "MSTORE"
    },
    "1252": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x54"
    },
    "1254": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1255": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1256": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "ADD",
      "path": "9"
    },
    "1257": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1258": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3117,
        3150
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1259": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1260": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1261": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1262": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1263": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "ADD",
      "path": "9"
    },
    "1264": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1265": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1266": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1267": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3107,
        3151
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1268": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3087,
        3104
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1270": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 1
    },
    "1271": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1272": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1273": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3180
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1275": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1276": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1277": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1278": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1279": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1280": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1281": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3191
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1282": {
      "branch": 29,
      "fn": "Oracle.oracleRequest",
      "offset": [
        3169,
        3196
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1283": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x54A"
    },
    "1286": {
      "branch": 29,
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1287": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1289": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1290": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1297": {
      "op": "SHL"
    },
    "1298": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1299": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1300": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1302": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1304": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1305": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "ADD",
      "path": "9"
    },
    "1306": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1307": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x14"
    },
    "1309": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1311": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1312": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "ADD",
      "path": "9"
    },
    "1313": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1314": {
      "op": "PUSH20",
      "value": "0x135D5CDD081D5CD94818481D5B9A5C5D59481251"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "1340": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1341": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "ADD",
      "path": "9"
    },
    "1342": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1343": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1344": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1345": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1346": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1347": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1348": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "SUB",
      "path": "9"
    },
    "1349": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "1351": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "ADD",
      "path": "9"
    },
    "1352": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1353": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1354": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3161,
        3221
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1355": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3285,
        3303
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1357": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3306,
        3326
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x55E"
    },
    "1360": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3306,
        3309
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "1361": {
      "offset": [
        897,
        906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12C"
    },
    "1364": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3306,
        3326
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "1369": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3306,
        3313
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x104B"
    },
    "1372": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3306,
        3326
      ],
      "op": "AND",
      "path": "9"
    },
    "1373": {
      "fn": "Oracle.oracleRequest",
      "jump": "i",
      "offset": [
        3306,
        3326
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1374": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3306,
        3326
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1375": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3285,
        3326
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1376": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3285,
        3326
      ],
      "op": "POP",
      "path": "9"
    },
    "1377": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3419,
        3427
      ],
      "op": "DUP11",
      "path": "9",
      "statement": 2
    },
    "1378": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3445,
        3461
      ],
      "op": "DUP10",
      "path": "9"
    },
    "1379": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3479,
        3498
      ],
      "op": "DUP10",
      "path": "9"
    },
    "1380": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3516,
        3526
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1381": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1383": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1384": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1386": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "ADD",
      "path": "9"
    },
    "1387": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1388": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1389": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1390": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1391": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1393": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "ADD",
      "path": "9"
    },
    "1394": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "op": "SUB"
    },
    "1403": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "AND",
      "path": "9"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "AND",
      "path": "9"
    },
    "1413": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1415": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "SHL",
      "path": "9"
    },
    "1416": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1417": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1418": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x14"
    },
    "1420": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "ADD",
      "path": "9"
    },
    "1421": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "op": "SUB"
    },
    "1430": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "NOT",
      "path": "9"
    },
    "1431": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "AND",
      "path": "9"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "NOT",
      "path": "9"
    },
    "1441": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "AND",
      "path": "9"
    },
    "1442": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1443": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1444": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1446": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "ADD",
      "path": "9"
    },
    "1447": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1448": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1449": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1450": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1452": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "ADD",
      "path": "9"
    },
    "1453": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1454": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "POP",
      "path": "9"
    },
    "1455": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "POP",
      "path": "9"
    },
    "1456": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "POP",
      "path": "9"
    },
    "1457": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "POP",
      "path": "9"
    },
    "1458": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "POP",
      "path": "9"
    },
    "1459": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1461": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1464": {
      "op": "DUP2"
    },
    "1465": {
      "op": "DUP4"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "op": "SUB"
    },
    "1468": {
      "op": "DUP2"
    },
    "1469": {
      "op": "MSTORE"
    },
    "1470": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1471": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1473": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3385,
        3540
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1474": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3362,
        3550
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1475": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3362,
        3550
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1476": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3362,
        3550
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1477": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3362,
        3550
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1479": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3362,
        3550
      ],
      "op": "ADD",
      "path": "9"
    },
    "1480": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3362,
        3550
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1481": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3348
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1483": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1485": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3349,
        3358
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1486": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1487": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1488": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1490": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "1491": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1492": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1493": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1494": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1496": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "ADD",
      "path": "9"
    },
    "1497": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1499": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3359
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1500": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3550
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1501": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3550
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1502": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3550
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1503": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3337,
        3550
      ],
      "op": "POP",
      "path": "9"
    },
    "1504": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3593,
        3600
      ],
      "op": "DUP10",
      "path": "9",
      "statement": 3
    },
    "1505": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xD8D7ECC4800D25FA53CE0372F13A416D98907A7EF3D8D3BDD79CF4FE75529C65"
    },
    "1538": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3614,
        3621
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1539": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3635,
        3644
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1540": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3658,
        3666
      ],
      "op": "DUP15",
      "path": "9"
    },
    "1541": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3680,
        3696
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1542": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3710,
        3729
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1543": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3743,
        3753
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1544": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3767,
        3779
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1545": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3793,
        3798
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1546": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3793,
        3798
      ],
      "op": "DUP14",
      "path": "9"
    },
    "1547": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1549": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1550": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1551": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP11",
      "path": "9"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "op": "SUB"
    },
    "1560": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "AND",
      "path": "9"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1567": {
      "op": "SHL"
    },
    "1568": {
      "op": "SUB"
    },
    "1569": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "AND",
      "path": "9"
    },
    "1570": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1571": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1572": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1574": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1575": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP10",
      "path": "9"
    },
    "1576": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1577": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1578": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1580": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1581": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP9",
      "path": "9"
    },
    "1582": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1583": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1584": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1586": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1587": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "op": "SUB"
    },
    "1596": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "AND",
      "path": "9"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "AND",
      "path": "9"
    },
    "1606": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1607": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1608": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1610": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1611": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1618": {
      "op": "SHL"
    },
    "1619": {
      "op": "SUB"
    },
    "1620": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "NOT",
      "path": "9"
    },
    "1621": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "AND",
      "path": "9"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "op": "SUB"
    },
    "1630": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "NOT",
      "path": "9"
    },
    "1631": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "AND",
      "path": "9"
    },
    "1632": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1633": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1634": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1636": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1637": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1638": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1639": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1640": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1642": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1643": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1644": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1645": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1646": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1648": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1649": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1650": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1652": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1653": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1654": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1655": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "SUB",
      "path": "9"
    },
    "1656": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1657": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1658": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1659": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1660": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1661": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1662": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1663": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1664": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1666": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "ADD",
      "path": "9"
    },
    "1667": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1668": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "POP",
      "path": "9"
    },
    "1669": {
      "op": "DUP1"
    },
    "1670": {
      "op": "DUP3"
    },
    "1671": {
      "op": "DUP5"
    },
    "1672": {
      "op": "CALLDATACOPY"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1675": {
      "op": "DUP4"
    },
    "1676": {
      "op": "DUP3"
    },
    "1677": {
      "op": "ADD"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1681": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1684": {
      "op": "SWAP1"
    },
    "1685": {
      "op": "SWAP2"
    },
    "1686": {
      "op": "ADD"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "op": "AND"
    },
    "1691": {
      "op": "SWAP1"
    },
    "1692": {
      "op": "SWAP3"
    },
    "1693": {
      "op": "ADD"
    },
    "1694": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1695": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1696": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "SUB",
      "path": "9"
    },
    "1697": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "SWAP13",
      "path": "9"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1700": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "SWAP11",
      "path": "9"
    },
    "1701": {
      "op": "POP"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "op": "POP"
    },
    "1704": {
      "op": "POP"
    },
    "1705": {
      "op": "POP"
    },
    "1706": {
      "op": "POP"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "op": "POP"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        3566,
        3808
      ],
      "op": "LOG2",
      "path": "9"
    },
    "1713": {
      "offset": [
        10890,
        10891
      ],
      "op": "POP",
      "path": "9"
    },
    "1714": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        10890,
        10891
      ],
      "op": "POP",
      "path": "9"
    },
    "1715": {
      "offset": [
        1647,
        1648
      ],
      "op": "POP",
      "path": "0"
    },
    "1716": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1717": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1718": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1719": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1720": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1721": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1722": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1723": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1724": {
      "fn": "Oracle.oracleRequest",
      "offset": [
        2752,
        3815
      ],
      "op": "POP",
      "path": "9"
    },
    "1725": {
      "fn": "Oracle.oracleRequest",
      "jump": "o",
      "offset": [
        2752,
        3815
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1726": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1727": {
      "offset": [
        10521,
        10531
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1728": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5026,
        5030
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1730": {
      "offset": [
        10505,
        10532
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1731": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1732": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1733": {
      "offset": [
        10505,
        10520
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1735": {
      "offset": [
        10505,
        10532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1737": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1738": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1740": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1741": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1742": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1743": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1745": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "AND",
      "path": "9"
    },
    "1746": {
      "branch": 30,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10532
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1747": {
      "offset": [
        10505,
        10557
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6F4"
    },
    "1750": {
      "branch": 30,
      "offset": [
        10505,
        10557
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1751": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10505,
        10557
      ],
      "op": "POP",
      "path": "9"
    },
    "1752": {
      "offset": [
        10550,
        10557
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6DF"
    },
    "1755": {
      "offset": [
        10550,
        10555
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC4C"
    },
    "1758": {
      "jump": "i",
      "offset": [
        10550,
        10557
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1759": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10550,
        10557
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1766": {
      "op": "SHL"
    },
    "1767": {
      "op": "SUB"
    },
    "1768": {
      "offset": [
        10536,
        10557
      ],
      "op": "AND",
      "path": "9"
    },
    "1769": {
      "offset": [
        10536,
        10546
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "offset": [
        10536,
        10557
      ],
      "op": "AND",
      "path": "9"
    },
    "1779": {
      "branch": 31,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10536,
        10557
      ],
      "op": "EQ",
      "path": "9"
    },
    "1780": {
      "offset": [
        10505,
        10557
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1781": {
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x72F"
    },
    "1784": {
      "branch": 31,
      "offset": [
        10484,
        10625
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1785": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1787": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "offset": [
        10484,
        10625
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1796": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1797": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1799": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "ADD",
      "path": "9"
    },
    "1800": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1801": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1802": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1804": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "ADD",
      "path": "9"
    },
    "1805": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1806": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1807": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "SUB",
      "path": "9"
    },
    "1808": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1809": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1810": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2A"
    },
    "1812": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1813": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1814": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1816": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "ADD",
      "path": "9"
    },
    "1817": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1818": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1205"
    },
    "1821": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2A"
    },
    "1823": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1824": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "1825": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1827": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "ADD",
      "path": "9"
    },
    "1828": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1829": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "POP",
      "path": "9"
    },
    "1830": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "POP",
      "path": "9"
    },
    "1831": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1833": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1834": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1835": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1836": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "SUB",
      "path": "9"
    },
    "1837": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1838": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1839": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10484,
        10625
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1840": {
      "offset": [
        10270,
        10293
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1842": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10270,
        10293
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1843": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10270,
        10293
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1844": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10270,
        10293
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1845": {
      "offset": [
        10270,
        10281
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1847": {
      "offset": [
        10270,
        10293
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1849": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10270,
        10293
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1850": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10270,
        10293
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1852": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10270,
        10293
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1853": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10270,
        10293
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1854": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10270,
        10293
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1855": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4997,
        5007
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1856": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4997,
        5007
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1857": {
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x791"
    },
    "1860": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1861": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1863": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1864": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1865": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "offset": [
        10262,
        10330
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1873": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1874": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1876": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1878": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1879": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "ADD",
      "path": "9"
    },
    "1880": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1881": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1B"
    },
    "1883": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "1885": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1886": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "ADD",
      "path": "9"
    },
    "1887": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1888": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x4D757374206861766520612076616C6964207265717565737449640000000000"
    },
    "1921": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "1923": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1924": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "ADD",
      "path": "9"
    },
    "1925": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1926": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1927": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1928": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1929": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1930": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1931": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "SUB",
      "path": "9"
    },
    "1932": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "1934": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "ADD",
      "path": "9"
    },
    "1935": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1936": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1937": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        10262,
        10330
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1938": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1940": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1941": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1942": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1944": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1945": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1946": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "ADD",
      "path": "9"
    },
    "1947": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP11",
      "path": "9"
    },
    "1948": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1949": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1950": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1963": {
      "op": "NOT"
    },
    "1964": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1966": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP11",
      "path": "9"
    },
    "1967": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1968": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "SHL",
      "path": "9"
    },
    "1969": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "AND",
      "path": "9"
    },
    "1970": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1971": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1972": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "ADD",
      "path": "9"
    },
    "1973": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "op": "SUB"
    },
    "1982": {
      "op": "NOT"
    },
    "1983": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP9",
      "path": "9"
    },
    "1984": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "AND",
      "path": "9"
    },
    "1985": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x54"
    },
    "1987": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1988": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "ADD",
      "path": "9"
    },
    "1989": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1990": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x58"
    },
    "1992": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1993": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1994": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "ADD",
      "path": "9"
    },
    "1995": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP9",
      "path": "9"
    },
    "1996": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1997": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1998": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1999": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2000": {
      "op": "DUP1"
    },
    "2001": {
      "op": "DUP5"
    },
    "2002": {
      "op": "SUB"
    },
    "2003": {
      "op": "SWAP1"
    },
    "2004": {
      "op": "SWAP2"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "op": "DUP2"
    },
    "2007": {
      "op": "MSTORE"
    },
    "2008": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x78"
    },
    "2010": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2011": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2012": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "ADD",
      "path": "9"
    },
    "2013": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2014": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5090,
        5246
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2015": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2016": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2017": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2018": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2019": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "ADD",
      "path": "9"
    },
    "2020": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2021": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2022": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2023": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5067,
        5256
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2024": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5046,
        5064
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2026": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "DUP12",
      "path": "9",
      "statement": 4
    },
    "2027": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2028": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2029": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5298
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2031": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2032": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2033": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2034": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2035": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2036": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2037": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5310
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2038": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5324
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2039": {
      "branch": 32,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5287,
        5324
      ],
      "op": "EQ",
      "path": "9"
    },
    "2040": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x848"
    },
    "2043": {
      "branch": 32,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2044": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2046": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2047": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2056": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2057": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2059": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2061": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2062": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "ADD",
      "path": "9"
    },
    "2063": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2064": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1E"
    },
    "2066": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2068": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2069": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "ADD",
      "path": "9"
    },
    "2070": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2071": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x506172616D7320646F206E6F74206D6174636820726571756573742049440000"
    },
    "2104": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2106": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2107": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "ADD",
      "path": "9"
    },
    "2108": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2109": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2110": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2111": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2112": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2113": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2114": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "SUB",
      "path": "9"
    },
    "2115": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "2117": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "ADD",
      "path": "9"
    },
    "2118": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2119": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2120": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5266,
        5380
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2121": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5411,
        5429
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 5,
      "value": "0x4"
    },
    "2123": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5411,
        5429
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2124": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x85B"
    },
    "2127": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2128": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5434,
        5442
      ],
      "op": "DUP10",
      "path": "9"
    },
    "2129": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2134": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5411,
        5433
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x104B"
    },
    "2137": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5411,
        5443
      ],
      "op": "AND",
      "path": "9"
    },
    "2138": {
      "fn": "Oracle.fulfillOracleRequest",
      "jump": "i",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2139": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2140": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5390,
        5408
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2142": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5390,
        5443
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2143": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 6,
      "value": "0x0"
    },
    "2145": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "DUP10",
      "path": "9"
    },
    "2146": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2147": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2148": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5471
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2150": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2152": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2153": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2155": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2156": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5460,
        5483
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2157": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5453,
        5483
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2158": {
      "offset": [
        966,
        972
      ],
      "op": "PUSH3",
      "path": "9",
      "value": "0x61A80"
    },
    "2162": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5514,
        5523
      ],
      "op": "GAS",
      "path": "9",
      "statement": 7
    },
    "2163": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5514,
        5553
      ],
      "op": "LT",
      "path": "9"
    },
    "2164": {
      "branch": 33,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5514,
        5553
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2165": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8C5"
    },
    "2168": {
      "branch": 33,
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2169": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2171": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2172": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2173": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2179": {
      "op": "SHL"
    },
    "2180": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2181": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2182": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2184": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2186": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2187": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "ADD",
      "path": "9"
    },
    "2188": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2189": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2190": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2191": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2193": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2194": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "ADD",
      "path": "9"
    },
    "2195": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2196": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x4D7573742070726F7669646520636F6E73756D657220656E6F75676820676173"
    },
    "2229": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2231": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2232": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "ADD",
      "path": "9"
    },
    "2233": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2234": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2235": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2236": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2237": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2238": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2239": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "SUB",
      "path": "9"
    },
    "2240": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "2242": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "ADD",
      "path": "9"
    },
    "2243": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2244": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2245": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5493,
        5611
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2246": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2248": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2249": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2250": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2252": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2253": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "ADD",
      "path": "9"
    },
    "2254": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP12",
      "path": "9"
    },
    "2255": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2256": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2257": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2259": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2260": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2261": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "ADD",
      "path": "9"
    },
    "2262": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2263": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2264": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2265": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2266": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2267": {
      "op": "DUP1"
    },
    "2268": {
      "op": "DUP4"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "op": "SWAP1"
    },
    "2271": {
      "op": "SWAP2"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "op": "DUP2"
    },
    "2274": {
      "op": "MSTORE"
    },
    "2275": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "2277": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2278": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2279": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "ADD",
      "path": "9"
    },
    "2280": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2281": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2282": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2284": {
      "op": "DUP2"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "DUP1"
    },
    "2287": {
      "op": "MLOAD"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "op": "AND"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2303": {
      "op": "SHL"
    },
    "2304": {
      "op": "SUB"
    },
    "2305": {
      "op": "NOT"
    },
    "2306": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "DUP11",
      "path": "9"
    },
    "2307": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "AND",
      "path": "9"
    },
    "2308": {
      "op": "OR"
    },
    "2309": {
      "op": "DUP2"
    },
    "2310": {
      "op": "MSTORE"
    },
    "2311": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2312": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2313": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2314": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2315": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5893,
        5905
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2317": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5893,
        5905
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "op": "SUB"
    },
    "2326": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        5932
      ],
      "op": "DUP13",
      "path": "9"
    },
    "2327": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        5932
      ],
      "op": "AND",
      "path": "9"
    },
    "2328": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        5932
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2329": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5946,
        6008
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2330": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2331": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2332": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2333": {
      "op": "SWAP1"
    },
    "2334": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2335": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2336": {
      "op": "DUP4"
    },
    "2337": {
      "op": "JUMPDEST"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2340": {
      "op": "DUP4"
    },
    "2341": {
      "op": "LT"
    },
    "2342": {
      "op": "PUSH2",
      "value": "0x940"
    },
    "2345": {
      "op": "JUMPI"
    },
    "2346": {
      "op": "DUP1"
    },
    "2347": {
      "op": "MLOAD"
    },
    "2348": {
      "op": "DUP3"
    },
    "2349": {
      "op": "MSTORE"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2352": {
      "op": "NOT"
    },
    "2353": {
      "op": "SWAP1"
    },
    "2354": {
      "op": "SWAP3"
    },
    "2355": {
      "op": "ADD"
    },
    "2356": {
      "op": "SWAP2"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2359": {
      "op": "SWAP2"
    },
    "2360": {
      "op": "DUP3"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "op": "SWAP2"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "2367": {
      "op": "JUMP"
    },
    "2368": {
      "op": "JUMPDEST"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "DUP4"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2378": {
      "op": "EXP"
    },
    "2379": {
      "op": "SUB"
    },
    "2380": {
      "op": "DUP1"
    },
    "2381": {
      "op": "NOT"
    },
    "2382": {
      "op": "DUP3"
    },
    "2383": {
      "op": "MLOAD"
    },
    "2384": {
      "op": "AND"
    },
    "2385": {
      "op": "DUP2"
    },
    "2386": {
      "op": "DUP5"
    },
    "2387": {
      "op": "MLOAD"
    },
    "2388": {
      "op": "AND"
    },
    "2389": {
      "op": "DUP1"
    },
    "2390": {
      "op": "DUP3"
    },
    "2391": {
      "op": "OR"
    },
    "2392": {
      "op": "DUP6"
    },
    "2393": {
      "op": "MSTORE"
    },
    "2394": {
      "op": "POP"
    },
    "2395": {
      "op": "POP"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "POP",
      "path": "9"
    },
    "2398": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "POP",
      "path": "9"
    },
    "2399": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "POP",
      "path": "9"
    },
    "2400": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2401": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "POP",
      "path": "9"
    },
    "2402": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "ADD",
      "path": "9"
    },
    "2403": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2404": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "POP",
      "path": "9"
    },
    "2405": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "POP",
      "path": "9"
    },
    "2406": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2408": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2410": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2411": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2412": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2413": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "SUB",
      "path": "9"
    },
    "2414": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2415": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2417": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2418": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "GAS",
      "path": "9"
    },
    "2419": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "CALL",
      "path": "9"
    },
    "2420": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2421": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "POP",
      "path": "9"
    },
    "2422": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "POP",
      "path": "9"
    },
    "2423": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5911,
        6018
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2424": {
      "op": "DUP1"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2427": {
      "op": "DUP2"
    },
    "2428": {
      "op": "EQ"
    },
    "2429": {
      "op": "PUSH2",
      "value": "0x9A2"
    },
    "2432": {
      "op": "JUMPI"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2435": {
      "op": "MLOAD"
    },
    "2436": {
      "op": "SWAP2"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2440": {
      "op": "NOT"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2443": {
      "op": "RETURNDATASIZE"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "AND"
    },
    "2446": {
      "op": "DUP3"
    },
    "2447": {
      "op": "ADD"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2450": {
      "op": "MSTORE"
    },
    "2451": {
      "op": "RETURNDATASIZE"
    },
    "2452": {
      "op": "DUP3"
    },
    "2453": {
      "op": "MSTORE"
    },
    "2454": {
      "op": "RETURNDATASIZE"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2459": {
      "op": "DUP5"
    },
    "2460": {
      "op": "ADD"
    },
    "2461": {
      "op": "RETURNDATACOPY"
    },
    "2462": {
      "op": "PUSH2",
      "value": "0x9A7"
    },
    "2465": {
      "op": "JUMP"
    },
    "2466": {
      "op": "JUMPDEST"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2469": {
      "op": "SWAP2"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "op": "JUMPDEST"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5892,
        6018
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2474": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        5892,
        6018
      ],
      "op": "SWAP12",
      "path": "9"
    },
    "2475": {
      "fn": "Oracle.fulfillOracleRequest",
      "offset": [
        4701,
        6095
      ],
      "op": "SWAP11",
      "path": "9"
    },
    "2476": {
      "op": "POP"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "op": "POP"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "POP"
    },
    "2487": {
      "fn": "Oracle.fulfillOracleRequest",
      "jump": "o",
      "offset": [
        4701,
        6095
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2488": {
      "offset": [
        859,
        906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2489": {
      "offset": [
        897,
        906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12C"
    },
    "2492": {
      "offset": [
        859,
        906
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2493": {
      "fn": "Oracle.fulfillOracleRequest",
      "jump": "o",
      "offset": [
        859,
        906
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2494": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7797,
        8029
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2495": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7941,
        7948
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2497": {
      "offset": [
        1079,
        1088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9C8"
    },
    "2500": {
      "offset": [
        1079,
        1086
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC5B"
    },
    "2503": {
      "jump": "i",
      "offset": [
        1079,
        1088
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2504": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1079,
        1088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2505": {
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA07"
    },
    "2508": {
      "offset": [
        1071,
        1125
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2509": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2511": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2512": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2521": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2522": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2524": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2526": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2527": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "2528": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2529": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2530": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2531": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "2533": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2534": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "2535": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2538": {
      "op": "DUP1"
    },
    "2539": {
      "op": "MLOAD"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2542": {
      "op": "PUSH2",
      "value": "0x122F"
    },
    "2545": {
      "op": "DUP4"
    },
    "2546": {
      "op": "CODECOPY"
    },
    "2547": {
      "op": "DUP2"
    },
    "2548": {
      "op": "MLOAD"
    },
    "2549": {
      "op": "SWAP2"
    },
    "2550": {
      "op": "MSTORE"
    },
    "2551": {
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "2553": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2554": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "2555": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2556": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2557": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2558": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2559": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2560": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2561": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "SUB",
      "path": "7"
    },
    "2562": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "2564": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "2565": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2566": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2567": {
      "fn": "Oracle.withdrawable",
      "offset": [
        1071,
        1125
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2568": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7971,
        7989
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 8,
      "value": "0x4"
    },
    "2570": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7971,
        7989
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2571": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7971,
        8022
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA1B"
    },
    "2574": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7971,
        8022
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2575": {
      "offset": [
        1139,
        1140
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2577": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7971,
        8022
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2582": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7971,
        7993
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10AC"
    },
    "2585": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7971,
        8022
      ],
      "op": "AND",
      "path": "9"
    },
    "2586": {
      "fn": "Oracle.withdrawable",
      "jump": "i",
      "offset": [
        7971,
        8022
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2587": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7971,
        8022
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2588": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7964,
        8022
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2589": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7964,
        8022
      ],
      "op": "POP",
      "path": "9"
    },
    "2590": {
      "fn": "Oracle.withdrawable",
      "offset": [
        7797,
        8029
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2591": {
      "fn": "Oracle.withdrawable",
      "jump": "o",
      "offset": [
        7797,
        8029
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2592": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2593": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2595": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2596": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2597": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2599": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2600": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2601": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "ADD",
      "path": "9"
    },
    "2602": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2603": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2604": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2605": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8865,
        8875
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2606": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "2608": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "SHL",
      "path": "9"
    },
    "2609": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2610": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2611": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "ADD",
      "path": "9"
    },
    "2612": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "op": "NOT"
    },
    "2622": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2623": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "AND",
      "path": "9"
    },
    "2624": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x54"
    },
    "2626": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2627": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "ADD",
      "path": "9"
    },
    "2628": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2629": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x58"
    },
    "2631": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2632": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2633": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "ADD",
      "path": "9"
    },
    "2634": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2635": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2636": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2637": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2638": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2639": {
      "op": "DUP1"
    },
    "2640": {
      "op": "DUP5"
    },
    "2641": {
      "op": "SUB"
    },
    "2642": {
      "op": "SWAP1"
    },
    "2643": {
      "op": "SWAP2"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "DUP2"
    },
    "2646": {
      "op": "MSTORE"
    },
    "2647": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x78"
    },
    "2649": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2650": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2651": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "ADD",
      "path": "9"
    },
    "2652": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2653": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8838,
        8904
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2654": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2655": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2656": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2657": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2658": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "ADD",
      "path": "9"
    },
    "2659": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2660": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2661": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2662": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8815,
        8914
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2663": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8794,
        8812
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2665": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "DUP8",
      "path": "9",
      "statement": 9
    },
    "2666": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2667": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2668": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8970
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2670": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2671": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2672": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2673": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2674": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2675": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2676": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8959,
        8982
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2677": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8945,
        8982
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2678": {
      "branch": 34,
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8945,
        8982
      ],
      "op": "EQ",
      "path": "9"
    },
    "2679": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAC7"
    },
    "2682": {
      "branch": 34,
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2683": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2685": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2686": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2695": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2696": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2698": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2700": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2701": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "ADD",
      "path": "9"
    },
    "2702": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2703": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1E"
    },
    "2705": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2707": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2708": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "ADD",
      "path": "9"
    },
    "2709": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2710": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x506172616D7320646F206E6F74206D6174636820726571756573742049440000"
    },
    "2743": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2745": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2746": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "ADD",
      "path": "9"
    },
    "2747": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2748": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2749": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2750": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2751": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2752": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2753": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "SUB",
      "path": "9"
    },
    "2754": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "2756": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "ADD",
      "path": "9"
    },
    "2757": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2758": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2759": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8924,
        9038
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2760": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9125,
        9128
      ],
      "op": "TIMESTAMP",
      "path": "9",
      "statement": 10
    },
    "2761": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9110,
        9121
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2762": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9110,
        9128
      ],
      "op": "GT",
      "path": "9"
    },
    "2763": {
      "branch": 35,
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9110,
        9128
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2764": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB15"
    },
    "2767": {
      "branch": 35,
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2768": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2770": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2771": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2778": {
      "op": "SHL"
    },
    "2779": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2780": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2781": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2783": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2785": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2786": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "ADD",
      "path": "9"
    },
    "2787": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2788": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x16"
    },
    "2790": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2792": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2793": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "ADD",
      "path": "9"
    },
    "2794": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2795": {
      "op": "PUSH22",
      "value": "0x14995C5D595CDD081A5CC81B9BDD08195E1C1A5C9959"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2820": {
      "op": "SHL"
    },
    "2821": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2823": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2824": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "ADD",
      "path": "9"
    },
    "2825": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2826": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2827": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2828": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2829": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2830": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2831": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "SUB",
      "path": "9"
    },
    "2832": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "2834": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "ADD",
      "path": "9"
    },
    "2835": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2836": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2837": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9102,
        9155
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2838": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 11,
      "value": "0x0"
    },
    "2840": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2841": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2842": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2843": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9184
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "2845": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2847": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2848": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2850": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2851": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2852": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9173,
        9196
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2853": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9166,
        9196
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2854": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9166,
        9196
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2855": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9166,
        9196
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2856": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9211,
        9242
      ],
      "op": "MLOAD",
      "path": "9",
      "statement": 12
    },
    "2857": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9185,
        9195
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2858": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9185,
        9195
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2859": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9211,
        9242
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA7842B9EC549398102C0D91B1B9919B2F20558AEFDADF57528A95C6CD3292E93"
    },
    "2892": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9211,
        9242
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2893": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9211,
        9242
      ],
      "op": "LOG2",
      "path": "9"
    },
    "2894": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9269
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 13,
      "value": "0x1"
    },
    "2896": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9269
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2897": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2899": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2900": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2901": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2910": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2911": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9279,
        9289
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2912": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2914": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2915": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "ADD",
      "path": "9"
    },
    "2916": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2917": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "2919": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2920": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "ADD",
      "path": "9"
    },
    "2921": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2922": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2923": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2924": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2925": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2932": {
      "op": "SHL"
    },
    "2933": {
      "op": "SUB"
    },
    "2934": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9269
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2935": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9269
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2936": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9269
      ],
      "op": "AND",
      "path": "9"
    },
    "2937": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9269
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2938": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9278
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "2943": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9278
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2944": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "2946": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2947": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2948": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "ADD",
      "path": "9"
    },
    "2949": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2950": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2952": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2953": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2954": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2955": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2956": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2957": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2958": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "SUB",
      "path": "9"
    },
    "2959": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "ADD",
      "path": "9"
    },
    "2960": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2961": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9269
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2963": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9269
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2964": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2965": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "2966": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2967": {
      "op": "DUP1"
    },
    "2968": {
      "op": "ISZERO"
    },
    "2969": {
      "op": "PUSH2",
      "value": "0xBA1"
    },
    "2972": {
      "op": "JUMPI"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2975": {
      "op": "DUP1"
    },
    "2976": {
      "op": "REVERT"
    },
    "2977": {
      "op": "JUMPDEST"
    },
    "2978": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "POP",
      "path": "9"
    },
    "2979": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "GAS",
      "path": "9"
    },
    "2980": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "CALL",
      "path": "9"
    },
    "2981": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2982": {
      "op": "DUP1"
    },
    "2983": {
      "op": "ISZERO"
    },
    "2984": {
      "op": "PUSH2",
      "value": "0xBB5"
    },
    "2987": {
      "op": "JUMPI"
    },
    "2988": {
      "op": "RETURNDATASIZE"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2991": {
      "op": "DUP1"
    },
    "2992": {
      "op": "RETURNDATACOPY"
    },
    "2993": {
      "op": "RETURNDATASIZE"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2996": {
      "op": "REVERT"
    },
    "2997": {
      "op": "JUMPDEST"
    },
    "2998": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "POP",
      "path": "9"
    },
    "2999": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "POP",
      "path": "9"
    },
    "3000": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "POP",
      "path": "9"
    },
    "3001": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "POP",
      "path": "9"
    },
    "3002": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3004": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3005": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3008": {
      "op": "DUP2"
    },
    "3009": {
      "op": "LT"
    },
    "3010": {
      "op": "ISZERO"
    },
    "3011": {
      "op": "PUSH2",
      "value": "0xBCB"
    },
    "3014": {
      "op": "JUMPI"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3017": {
      "op": "DUP1"
    },
    "3018": {
      "op": "REVERT"
    },
    "3019": {
      "op": "JUMPDEST"
    },
    "3020": {
      "op": "POP"
    },
    "3021": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9260,
        9300
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3022": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9253,
        9301
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBD3"
    },
    "3025": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9253,
        9301
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3026": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9253,
        9301
      ],
      "op": "INVALID",
      "path": "9"
    },
    "3027": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        9253,
        9301
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3028": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "POP",
      "path": "9"
    },
    "3029": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "POP",
      "path": "9"
    },
    "3030": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "POP",
      "path": "9"
    },
    "3031": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "POP",
      "path": "9"
    },
    "3032": {
      "fn": "Oracle.cancelOracleRequest",
      "offset": [
        8618,
        9308
      ],
      "op": "POP",
      "path": "9"
    },
    "3033": {
      "fn": "Oracle.cancelOracleRequest",
      "jump": "o",
      "offset": [
        8618,
        9308
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3034": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6734,
        6904
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3035": {
      "offset": [
        1079,
        1088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBE2"
    },
    "3038": {
      "offset": [
        1079,
        1086
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC5B"
    },
    "3041": {
      "jump": "i",
      "offset": [
        1079,
        1088
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3042": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1079,
        1088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3043": {
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC21"
    },
    "3046": {
      "offset": [
        1071,
        1125
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3047": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3049": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3050": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3059": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3060": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3062": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3064": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3065": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3066": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3067": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3068": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3069": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3071": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3072": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3073": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3076": {
      "op": "DUP1"
    },
    "3077": {
      "op": "MLOAD"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0x122F"
    },
    "3083": {
      "op": "DUP4"
    },
    "3084": {
      "op": "CODECOPY"
    },
    "3085": {
      "op": "DUP2"
    },
    "3086": {
      "op": "MLOAD"
    },
    "3087": {
      "op": "SWAP2"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "3091": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3092": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3093": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3094": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3095": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3096": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3097": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3098": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3099": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "SUB",
      "path": "7"
    },
    "3100": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "3102": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3103": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3104": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3105": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        1071,
        1125
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3112": {
      "op": "SHL"
    },
    "3113": {
      "op": "SUB"
    },
    "3114": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 14
    },
    "3115": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3116": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3117": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "AND",
      "path": "9"
    },
    "3118": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3120": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3121": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3122": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3123": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6879
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "3125": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3127": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3128": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3130": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3131": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6886
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3132": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3133": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3136": {
      "op": "NOT"
    },
    "3137": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "AND",
      "path": "9"
    },
    "3138": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3139": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3140": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3141": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3142": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3143": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3144": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "OR",
      "path": "9"
    },
    "3145": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3146": {
      "fn": "Oracle.setFulfillmentPermission",
      "offset": [
        6864,
        6897
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3147": {
      "fn": "Oracle.setFulfillmentPermission",
      "jump": "o",
      "offset": [
        6734,
        6904
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3148": {
      "fn": "Ownable.owner",
      "offset": [
        893,
        964
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3149": {
      "fn": "Ownable.owner",
      "offset": [
        931,
        938
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3151": {
      "fn": "Ownable.owner",
      "offset": [
        953,
        959
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 15
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "fn": "Ownable.owner",
      "offset": [
        953,
        959
      ],
      "op": "AND",
      "path": "7"
    },
    "3161": {
      "fn": "Ownable.owner",
      "offset": [
        893,
        964
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3162": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        893,
        964
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3163": {
      "fn": "Ownable.isOwner",
      "offset": [
        1212,
        1296
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3164": {
      "fn": "Ownable.isOwner",
      "offset": [
        1252,
        1256
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3166": {
      "fn": "Ownable.isOwner",
      "offset": [
        1285,
        1291
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 16
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3173": {
      "op": "SHL"
    },
    "3174": {
      "op": "SUB"
    },
    "3175": {
      "fn": "Ownable.isOwner",
      "offset": [
        1285,
        1291
      ],
      "op": "AND",
      "path": "7"
    },
    "3176": {
      "fn": "Ownable.isOwner",
      "offset": [
        1271,
        1281
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3177": {
      "fn": "Ownable.isOwner",
      "offset": [
        1271,
        1291
      ],
      "op": "EQ",
      "path": "7"
    },
    "3178": {
      "fn": "Ownable.isOwner",
      "offset": [
        1271,
        1291
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3179": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        1212,
        1296
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3180": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3181": {
      "offset": [
        1598,
        1617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC74"
    },
    "3184": {
      "offset": [
        1598,
        1615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "3187": {
      "jump": "i",
      "offset": [
        1598,
        1617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3188": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1598,
        1617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3195": {
      "op": "SHL"
    },
    "3196": {
      "op": "SUB"
    },
    "3197": {
      "offset": [
        1584,
        1617
      ],
      "op": "AND",
      "path": "0"
    },
    "3198": {
      "offset": [
        1584,
        1594
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3205": {
      "op": "SHL"
    },
    "3206": {
      "op": "SUB"
    },
    "3207": {
      "offset": [
        1584,
        1617
      ],
      "op": "AND",
      "path": "0"
    },
    "3208": {
      "branch": 37,
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1584,
        1617
      ],
      "op": "EQ",
      "path": "0"
    },
    "3209": {
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCCF"
    },
    "3212": {
      "branch": 37,
      "offset": [
        1576,
        1641
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3213": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3215": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3216": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "offset": [
        1576,
        1641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3225": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3226": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3228": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3230": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3231": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "ADD",
      "path": "0"
    },
    "3232": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3233": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "3235": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3237": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3238": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "ADD",
      "path": "0"
    },
    "3239": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3240": {
      "op": "PUSH19",
      "value": "0x26BAB9BA103AB9B2902624A725903A37B5B2B7"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "3262": {
      "op": "SHL"
    },
    "3263": {
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3265": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3266": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "ADD",
      "path": "0"
    },
    "3267": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3268": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3269": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3270": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3271": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3272": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3273": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "SUB",
      "path": "0"
    },
    "3274": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3276": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "ADD",
      "path": "0"
    },
    "3277": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3278": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3279": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1576,
        1641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3280": {
      "offset": [
        2310,
        2322
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3281": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2310,
        2322
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3282": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        892,
        897
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3283": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        892,
        897
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3284": {
      "offset": [
        315,
        362
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3286": {
      "op": "GT"
    },
    "3287": {
      "offset": [
        2310,
        2348
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3288": {
      "offset": [
        2302,
        2375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD21"
    },
    "3291": {
      "offset": [
        2302,
        2375
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3292": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3294": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3295": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3302": {
      "op": "SHL"
    },
    "3303": {
      "offset": [
        2302,
        2375
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3304": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3305": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3307": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3309": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3310": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "ADD",
      "path": "0"
    },
    "3311": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3312": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "3314": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3316": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3317": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "ADD",
      "path": "0"
    },
    "3318": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3319": {
      "op": "PUSH22",
      "value": "0x92DCECC2D8D2C840E4CAE2EACAE6E840D8CADCCEE8D"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x53"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "offset": [
        2302,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3347": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3348": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "ADD",
      "path": "0"
    },
    "3349": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3350": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3351": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3352": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3353": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3354": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3355": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "SUB",
      "path": "0"
    },
    "3356": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3358": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "ADD",
      "path": "0"
    },
    "3359": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3360": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3361": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2302,
        2375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3362": {
      "offset": [
        2006,
        2008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3364": {
      "offset": [
        1995,
        2009
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3365": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1995,
        2009
      ],
      "op": "ADD",
      "path": "0"
    },
    "3366": {
      "offset": [
        1989,
        2010
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3367": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        929,
        934
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3368": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        929,
        934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3375": {
      "op": "SHL"
    },
    "3376": {
      "op": "SUB"
    },
    "3377": {
      "op": "NOT"
    },
    "3378": {
      "offset": [
        2029,
        2068
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3379": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2029,
        2068
      ],
      "op": "AND",
      "path": "0"
    },
    "3380": {
      "op": "PUSH4",
      "value": "0x20214CA3"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3387": {
      "op": "SHL"
    },
    "3388": {
      "offset": [
        2029,
        2068
      ],
      "op": "EQ",
      "path": "0"
    },
    "3389": {
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8D"
    },
    "3392": {
      "offset": [
        2021,
        2103
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3393": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3395": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3396": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3403": {
      "op": "SHL"
    },
    "3404": {
      "offset": [
        2021,
        2103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3405": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3406": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3408": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3410": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3411": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "ADD",
      "path": "0"
    },
    "3412": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3413": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "3415": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3417": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3418": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "ADD",
      "path": "0"
    },
    "3419": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3420": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4D757374207573652077686974656C69737465642066756E6374696F6E730000"
    },
    "3453": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3455": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3456": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "ADD",
      "path": "0"
    },
    "3457": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3458": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3459": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3460": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3461": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3462": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3463": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "SUB",
      "path": "0"
    },
    "3464": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3466": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "ADD",
      "path": "0"
    },
    "3467": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3468": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3469": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2021,
        2103
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3470": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1041,
        1048
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3471": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1036,
        1038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3473": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1029,
        1034
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3474": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1025,
        1039
      ],
      "op": "ADD",
      "path": "0"
    },
    "3475": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1018,
        1049
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3476": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1171,
        1178
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3477": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1166,
        1168
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3479": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1159,
        1164
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3480": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1155,
        1169
      ],
      "op": "ADD",
      "path": "0"
    },
    "3481": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1148,
        1179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3482": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1284,
        1296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3484": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1310,
        1314
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3491": {
      "op": "SHL"
    },
    "3492": {
      "op": "SUB"
    },
    "3493": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1328
      ],
      "op": "AND",
      "path": "0"
    },
    "3494": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1329,
        1334
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3495": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3497": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3498": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3499": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3500": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3501": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3502": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3503": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3505": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "ADD",
      "path": "0"
    },
    "3506": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3507": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3508": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3509": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3510": {
      "op": "JUMPDEST"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3513": {
      "op": "DUP4"
    },
    "3514": {
      "op": "LT"
    },
    "3515": {
      "op": "PUSH2",
      "value": "0xDD5"
    },
    "3518": {
      "op": "JUMPI"
    },
    "3519": {
      "op": "DUP1"
    },
    "3520": {
      "op": "MLOAD"
    },
    "3521": {
      "op": "DUP3"
    },
    "3522": {
      "op": "MSTORE"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3525": {
      "op": "NOT"
    },
    "3526": {
      "op": "SWAP1"
    },
    "3527": {
      "op": "SWAP3"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "SWAP2"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3532": {
      "op": "SWAP2"
    },
    "3533": {
      "op": "DUP3"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "op": "SWAP2"
    },
    "3536": {
      "op": "ADD"
    },
    "3537": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3540": {
      "op": "JUMP"
    },
    "3541": {
      "op": "JUMPDEST"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3544": {
      "op": "DUP4"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3547": {
      "op": "SUB"
    },
    "3548": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3551": {
      "op": "EXP"
    },
    "3552": {
      "op": "SUB"
    },
    "3553": {
      "op": "DUP1"
    },
    "3554": {
      "op": "NOT"
    },
    "3555": {
      "op": "DUP3"
    },
    "3556": {
      "op": "MLOAD"
    },
    "3557": {
      "op": "AND"
    },
    "3558": {
      "op": "DUP2"
    },
    "3559": {
      "op": "DUP5"
    },
    "3560": {
      "op": "MLOAD"
    },
    "3561": {
      "op": "AND"
    },
    "3562": {
      "op": "DUP1"
    },
    "3563": {
      "op": "DUP3"
    },
    "3564": {
      "op": "OR"
    },
    "3565": {
      "op": "DUP6"
    },
    "3566": {
      "op": "MSTORE"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "op": "POP"
    },
    "3569": {
      "op": "POP"
    },
    "3570": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3571": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3572": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3573": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3574": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3575": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "ADD",
      "path": "0"
    },
    "3576": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3577": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3578": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3579": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3581": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3583": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3584": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3585": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3586": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "SUB",
      "path": "0"
    },
    "3587": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3588": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3589": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "GAS",
      "path": "0"
    },
    "3590": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "DELEGATECALL",
      "path": "0"
    },
    "3591": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3592": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3593": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3594": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1302,
        1335
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3595": {
      "op": "DUP1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3598": {
      "op": "DUP2"
    },
    "3599": {
      "op": "EQ"
    },
    "3600": {
      "op": "PUSH2",
      "value": "0xE35"
    },
    "3603": {
      "op": "JUMPI"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3606": {
      "op": "MLOAD"
    },
    "3607": {
      "op": "SWAP2"
    },
    "3608": {
      "op": "POP"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3611": {
      "op": "NOT"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3614": {
      "op": "RETURNDATASIZE"
    },
    "3615": {
      "op": "ADD"
    },
    "3616": {
      "op": "AND"
    },
    "3617": {
      "op": "DUP3"
    },
    "3618": {
      "op": "ADD"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3621": {
      "op": "MSTORE"
    },
    "3622": {
      "op": "RETURNDATASIZE"
    },
    "3623": {
      "op": "DUP3"
    },
    "3624": {
      "op": "MSTORE"
    },
    "3625": {
      "op": "RETURNDATASIZE"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3630": {
      "op": "DUP5"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "op": "RETURNDATACOPY"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE3A"
    },
    "3636": {
      "op": "JUMP"
    },
    "3637": {
      "op": "JUMPDEST"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3640": {
      "op": "SWAP2"
    },
    "3641": {
      "op": "POP"
    },
    "3642": {
      "op": "JUMPDEST"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1283,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3645": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1283,
        1335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3646": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1283,
        1335
      ],
      "op": "POP",
      "path": "0"
    },
    "3647": {
      "branch": 38,
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1372,
        1379
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 17
    },
    "3648": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE90"
    },
    "3651": {
      "branch": 38,
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3652": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3654": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3655": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3662": {
      "op": "SHL"
    },
    "3663": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3664": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3665": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3667": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3669": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3670": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "ADD",
      "path": "0"
    },
    "3671": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3672": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "3674": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3676": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3677": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "ADD",
      "path": "0"
    },
    "3678": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3679": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x556E61626C6520746F2063726561746520726571756573740000000000000000"
    },
    "3712": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3714": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3715": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "ADD",
      "path": "0"
    },
    "3716": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3717": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3718": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3719": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3720": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3721": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3722": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "SUB",
      "path": "0"
    },
    "3723": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3725": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "ADD",
      "path": "0"
    },
    "3726": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3727": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3728": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        1364,
        1408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3729": {
      "offset": [
        2109,
        2110
      ],
      "op": "POP",
      "path": "0"
    },
    "3730": {
      "offset": [
        2381,
        2382
      ],
      "op": "POP",
      "path": "0"
    },
    "3731": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        2381,
        2382
      ],
      "op": "POP",
      "path": "0"
    },
    "3732": {
      "offset": [
        1647,
        1648
      ],
      "op": "POP",
      "path": "0"
    },
    "3733": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "POP",
      "path": "0"
    },
    "3734": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "POP",
      "path": "0"
    },
    "3735": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "offset": [
        750,
        1413
      ],
      "op": "POP",
      "path": "0"
    },
    "3736": {
      "fn": "LinkTokenReceiver.onTokenTransfer",
      "jump": "o",
      "offset": [
        750,
        1413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3737": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6304,
        6471
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3744": {
      "op": "SHL"
    },
    "3745": {
      "op": "SUB"
    },
    "3746": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "AND",
      "path": "9",
      "statement": 18
    },
    "3747": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6415,
        6419
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3749": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3750": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3751": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3752": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6457
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "3754": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3756": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3757": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3759": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3760": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "3761": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3762": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "3764": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "AND",
      "path": "9"
    },
    "3765": {
      "fn": "Oracle.getAuthorizationStatus",
      "offset": [
        6442,
        6464
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3766": {
      "fn": "Oracle.getAuthorizationStatus",
      "jump": "o",
      "offset": [
        6304,
        6471
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3768": {
      "offset": [
        1079,
        1088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEBF"
    },
    "3771": {
      "offset": [
        1079,
        1086
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC5B"
    },
    "3774": {
      "jump": "i",
      "offset": [
        1079,
        1088
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1079,
        1088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3776": {
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEFE"
    },
    "3779": {
      "offset": [
        1071,
        1125
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3780": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3784": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3790": {
      "op": "SHL"
    },
    "3791": {
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3798": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3804": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3805": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3806": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3809": {
      "op": "DUP1"
    },
    "3810": {
      "op": "MLOAD"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3813": {
      "op": "PUSH2",
      "value": "0x122F"
    },
    "3816": {
      "op": "DUP4"
    },
    "3817": {
      "op": "CODECOPY"
    },
    "3818": {
      "op": "DUP2"
    },
    "3819": {
      "op": "MLOAD"
    },
    "3820": {
      "op": "SWAP2"
    },
    "3821": {
      "op": "MSTORE"
    },
    "3822": {
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "3824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3826": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "SUB",
      "path": "7"
    },
    "3833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "3835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1125
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1503,
        1531
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 19,
      "value": "0xF07"
    },
    "3842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1522,
        1530
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1503,
        1521
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1109"
    },
    "3846": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1503,
        1531
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1503,
        1531
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1435,
        1536
      ],
      "op": "POP",
      "path": "7"
    },
    "3849": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1435,
        1536
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3850": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3851": {
      "offset": [
        1079,
        1088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF12"
    },
    "3854": {
      "offset": [
        1079,
        1086
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC5B"
    },
    "3857": {
      "jump": "i",
      "offset": [
        1079,
        1088
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3858": {
      "branch": 39,
      "fn": "Oracle.withdraw",
      "offset": [
        1079,
        1088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3859": {
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF51"
    },
    "3862": {
      "branch": 39,
      "offset": [
        1071,
        1125
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3863": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3865": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3866": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3873": {
      "op": "SHL"
    },
    "3874": {
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3875": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3876": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3878": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3880": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3881": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3882": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3883": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3884": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3885": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3887": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3888": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3889": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3892": {
      "op": "DUP1"
    },
    "3893": {
      "op": "MLOAD"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3896": {
      "op": "PUSH2",
      "value": "0x122F"
    },
    "3899": {
      "op": "DUP4"
    },
    "3900": {
      "op": "CODECOPY"
    },
    "3901": {
      "op": "DUP2"
    },
    "3902": {
      "op": "MLOAD"
    },
    "3903": {
      "op": "SWAP2"
    },
    "3904": {
      "op": "MSTORE"
    },
    "3905": {
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "3907": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3908": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3909": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3910": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3911": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3912": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3913": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3914": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3915": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "SUB",
      "path": "7"
    },
    "3916": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "3918": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "ADD",
      "path": "7"
    },
    "3919": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3920": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3921": {
      "fn": "Oracle.withdraw",
      "offset": [
        1071,
        1125
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3922": {
      "fn": "Oracle.withdraw",
      "offset": [
        7404,
        7411
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3923": {
      "offset": [
        9921,
        9961
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF63"
    },
    "3926": {
      "fn": "Oracle.withdraw",
      "offset": [
        7404,
        7411
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3927": {
      "offset": [
        1139,
        1140
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "3929": {
      "offset": [
        9921,
        9961
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "3934": {
      "offset": [
        9921,
        9932
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x104B"
    },
    "3937": {
      "offset": [
        9921,
        9961
      ],
      "op": "AND",
      "path": "9"
    },
    "3938": {
      "fn": "Oracle.withdraw",
      "jump": "i",
      "offset": [
        9921,
        9961
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3939": {
      "fn": "Oracle.withdraw",
      "offset": [
        9921,
        9961
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3940": {
      "offset": [
        9899,
        9917
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3942": {
      "fn": "Oracle.withdraw",
      "offset": [
        9899,
        9917
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3943": {
      "offset": [
        9899,
        9961
      ],
      "op": "LT",
      "path": "9"
    },
    "3944": {
      "branch": 36,
      "fn": "Oracle.withdraw",
      "offset": [
        9899,
        9961
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3945": {
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFA3"
    },
    "3948": {
      "branch": 36,
      "offset": [
        9878,
        10040
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3949": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3951": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3952": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3958": {
      "op": "SHL"
    },
    "3959": {
      "offset": [
        9878,
        10040
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3960": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3961": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3963": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "ADD",
      "path": "9"
    },
    "3964": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3965": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3966": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3968": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "ADD",
      "path": "9"
    },
    "3969": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3970": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3971": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "SUB",
      "path": "9"
    },
    "3972": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3973": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3974": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x35"
    },
    "3976": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3977": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "3978": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "3980": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "ADD",
      "path": "9"
    },
    "3981": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3982": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11D0"
    },
    "3985": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x35"
    },
    "3987": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3988": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "CODECOPY",
      "path": "9"
    },
    "3989": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3991": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "ADD",
      "path": "9"
    },
    "3992": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3993": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "POP",
      "path": "9"
    },
    "3994": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "POP",
      "path": "9"
    },
    "3995": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "3997": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "3998": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "DUP1",
      "path": "9"
    },
    "3999": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4000": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "SUB",
      "path": "9"
    },
    "4001": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4002": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4003": {
      "fn": "Oracle.withdraw",
      "offset": [
        9878,
        10040
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4004": {
      "fn": "Oracle.withdraw",
      "offset": [
        7448,
        7466
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 20,
      "value": "0x4"
    },
    "4006": {
      "fn": "Oracle.withdraw",
      "offset": [
        7448,
        7466
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4007": {
      "fn": "Oracle.withdraw",
      "offset": [
        7448,
        7479
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFB6"
    },
    "4010": {
      "fn": "Oracle.withdraw",
      "offset": [
        7448,
        7479
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4011": {
      "fn": "Oracle.withdraw",
      "offset": [
        7471,
        7478
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4012": {
      "fn": "Oracle.withdraw",
      "offset": [
        7448,
        7479
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4017": {
      "fn": "Oracle.withdraw",
      "offset": [
        7448,
        7470
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10AC"
    },
    "4020": {
      "fn": "Oracle.withdraw",
      "offset": [
        7448,
        7479
      ],
      "op": "AND",
      "path": "9"
    },
    "4021": {
      "fn": "Oracle.withdraw",
      "jump": "i",
      "offset": [
        7448,
        7479
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4022": {
      "fn": "Oracle.withdraw",
      "offset": [
        7448,
        7479
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4023": {
      "fn": "Oracle.withdraw",
      "offset": [
        7427,
        7445
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4025": {
      "fn": "Oracle.withdraw",
      "offset": [
        7427,
        7479
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4026": {
      "fn": "Oracle.withdraw",
      "offset": [
        7427,
        7479
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4027": {
      "fn": "Oracle.withdraw",
      "offset": [
        7427,
        7479
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4028": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 21,
      "value": "0x1"
    },
    "4030": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4031": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4033": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4034": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4035": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4044": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4051": {
      "op": "SHL"
    },
    "4052": {
      "op": "SUB"
    },
    "4053": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP8",
      "path": "9"
    },
    "4054": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4055": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "AND",
      "path": "9"
    },
    "4056": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4057": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4058": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "ADD",
      "path": "9"
    },
    "4059": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4060": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4061": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4062": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4063": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4065": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4066": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "ADD",
      "path": "9"
    },
    "4067": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP7",
      "path": "9"
    },
    "4068": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4069": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4070": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4071": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4072": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4073": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4074": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4075": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "AND",
      "path": "9"
    },
    "4076": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4077": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7514
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA9059CBB"
    },
    "4082": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7514
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4083": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "4085": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4086": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4087": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "ADD",
      "path": "9"
    },
    "4088": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4089": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4091": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4092": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4093": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4094": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4095": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4096": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4097": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "SUB",
      "path": "9"
    },
    "4098": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "ADD",
      "path": "9"
    },
    "4099": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4100": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4102": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7505
      ],
      "op": "DUP8",
      "path": "9"
    },
    "4103": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4104": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "4105": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4106": {
      "op": "DUP1"
    },
    "4107": {
      "op": "ISZERO"
    },
    "4108": {
      "op": "PUSH2",
      "value": "0x1014"
    },
    "4111": {
      "op": "JUMPI"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4114": {
      "op": "DUP1"
    },
    "4115": {
      "op": "REVERT"
    },
    "4116": {
      "op": "JUMPDEST"
    },
    "4117": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "POP",
      "path": "9"
    },
    "4118": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "GAS",
      "path": "9"
    },
    "4119": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "CALL",
      "path": "9"
    },
    "4120": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4121": {
      "op": "DUP1"
    },
    "4122": {
      "op": "ISZERO"
    },
    "4123": {
      "op": "PUSH2",
      "value": "0x1028"
    },
    "4126": {
      "op": "JUMPI"
    },
    "4127": {
      "op": "RETURNDATASIZE"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4130": {
      "op": "DUP1"
    },
    "4131": {
      "op": "RETURNDATACOPY"
    },
    "4132": {
      "op": "RETURNDATASIZE"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4135": {
      "op": "REVERT"
    },
    "4136": {
      "op": "JUMPDEST"
    },
    "4137": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "POP",
      "path": "9"
    },
    "4138": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "POP",
      "path": "9"
    },
    "4139": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "POP",
      "path": "9"
    },
    "4140": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "POP",
      "path": "9"
    },
    "4141": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4143": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4144": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4147": {
      "op": "DUP2"
    },
    "4148": {
      "op": "LT"
    },
    "4149": {
      "op": "ISZERO"
    },
    "4150": {
      "op": "PUSH2",
      "value": "0x103E"
    },
    "4153": {
      "op": "JUMPI"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4156": {
      "op": "DUP1"
    },
    "4157": {
      "op": "REVERT"
    },
    "4158": {
      "op": "JUMPDEST"
    },
    "4159": {
      "op": "POP"
    },
    "4160": {
      "fn": "Oracle.withdraw",
      "offset": [
        7496,
        7535
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4161": {
      "fn": "Oracle.withdraw",
      "offset": [
        7489,
        7536
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1046"
    },
    "4164": {
      "fn": "Oracle.withdraw",
      "offset": [
        7489,
        7536
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4165": {
      "fn": "Oracle.withdraw",
      "offset": [
        7489,
        7536
      ],
      "op": "INVALID",
      "path": "9"
    },
    "4166": {
      "fn": "Oracle.withdraw",
      "offset": [
        7489,
        7536
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4167": {
      "offset": [
        1131,
        1132
      ],
      "op": "POP",
      "path": "7"
    },
    "4168": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "POP",
      "path": "9"
    },
    "4169": {
      "fn": "Oracle.withdraw",
      "offset": [
        7233,
        7543
      ],
      "op": "POP",
      "path": "9"
    },
    "4170": {
      "fn": "Oracle.withdraw",
      "jump": "o",
      "offset": [
        7233,
        7543
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4171": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        863,
        1025
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4172": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        921,
        928
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4174": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        948,
        953
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4175": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        948,
        953
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4176": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        948,
        953
      ],
      "op": "ADD",
      "path": "8"
    },
    "4177": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        967,
        973
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 22
    },
    "4178": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        967,
        973
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4179": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        967,
        973
      ],
      "op": "LT",
      "path": "8"
    },
    "4180": {
      "branch": 41,
      "fn": "SafeMathChainlink.add",
      "offset": [
        967,
        973
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4181": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10A5"
    },
    "4184": {
      "branch": 41,
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4185": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4187": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4188": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4195": {
      "op": "SHL"
    },
    "4196": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4197": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4198": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4200": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4202": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4203": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "ADD",
      "path": "8"
    },
    "4204": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4205": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1B"
    },
    "4207": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "4209": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4210": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "ADD",
      "path": "8"
    },
    "4211": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4212": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "4245": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "4247": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4248": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "ADD",
      "path": "8"
    },
    "4249": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4250": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4251": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4252": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4253": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4254": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4255": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SUB",
      "path": "8"
    },
    "4256": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "4258": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "ADD",
      "path": "8"
    },
    "4259": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4260": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4261": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4262": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        1019,
        1020
      ],
      "op": "SWAP4",
      "path": "8",
      "statement": 23
    },
    "4263": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        863,
        1025
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4264": {
      "op": "POP"
    },
    "4265": {
      "op": "POP"
    },
    "4266": {
      "op": "POP"
    },
    "4267": {
      "fn": "SafeMathChainlink.add",
      "jump": "o",
      "offset": [
        863,
        1025
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4268": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1277,
        1442
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4269": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1335,
        1342
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4271": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1363,
        1364
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 24
    },
    "4272": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1358,
        1359
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4273": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1358,
        1364
      ],
      "op": "GT",
      "path": "8"
    },
    "4274": {
      "branch": 42,
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1358,
        1364
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4275": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1103"
    },
    "4278": {
      "branch": 42,
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4279": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4281": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4282": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4289": {
      "op": "SHL"
    },
    "4290": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4291": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4292": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4294": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4296": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4297": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "ADD",
      "path": "8"
    },
    "4298": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4299": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1E"
    },
    "4301": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "4303": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4304": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "ADD",
      "path": "8"
    },
    "4305": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4306": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "4339": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "4341": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4342": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "ADD",
      "path": "8"
    },
    "4343": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4344": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4345": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4346": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4347": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4348": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4349": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "SUB",
      "path": "8"
    },
    "4350": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "4352": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "ADD",
      "path": "8"
    },
    "4353": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4354": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "REVERT",
      "path": "8"
    },
    "4355": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1350,
        1399
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4356": {
      "op": "POP"
    },
    "4357": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1417,
        1422
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4358": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1417,
        1422
      ],
      "op": "SUB",
      "path": "8"
    },
    "4359": {
      "fn": "SafeMathChainlink.sub",
      "offset": [
        1417,
        1422
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4360": {
      "fn": "SafeMathChainlink.sub",
      "jump": "o",
      "offset": [
        1277,
        1442
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4361": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1629,
        1840
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4368": {
      "op": "SHL"
    },
    "4369": {
      "op": "SUB"
    },
    "4370": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1698,
        1720
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 25
    },
    "4371": {
      "branch": 40,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1698,
        1720
      ],
      "op": "AND",
      "path": "7"
    },
    "4372": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x114E"
    },
    "4375": {
      "branch": 40,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4376": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4379": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4385": {
      "op": "SHL"
    },
    "4386": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4387": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4388": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4390": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "ADD",
      "path": "7"
    },
    "4391": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4392": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4393": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4395": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "ADD",
      "path": "7"
    },
    "4396": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4397": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4398": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "SUB",
      "path": "7"
    },
    "4399": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4400": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4401": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x26"
    },
    "4403": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4404": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4405": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4407": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "ADD",
      "path": "7"
    },
    "4408": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4409": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11AA"
    },
    "4412": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x26"
    },
    "4414": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "CODECOPY",
      "path": "7"
    },
    "4416": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4418": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "ADD",
      "path": "7"
    },
    "4419": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4420": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "POP",
      "path": "7"
    },
    "4421": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "POP",
      "path": "7"
    },
    "4422": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4424": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "SUB",
      "path": "7"
    },
    "4428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4429": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "REVERT",
      "path": "7"
    },
    "4430": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1690,
        1763
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4431": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1795,
        1801
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x0"
    },
    "4433": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1795,
        1801
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4434": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1795,
        1801
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4435": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4444": {
      "op": "SHL"
    },
    "4445": {
      "op": "SUB"
    },
    "4446": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4447": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "DUP6",
      "path": "7"
    },
    "4448": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "AND",
      "path": "7"
    },
    "4449": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1795,
        1801
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1795,
        1801
      ],
      "op": "AND",
      "path": "7"
    },
    "4452": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1795,
        1801
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4453": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4486": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4487": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1774,
        1812
      ],
      "op": "LOG3",
      "path": "7"
    },
    "4488": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1824
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x0"
    },
    "4490": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4491": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4498": {
      "op": "SHL"
    },
    "4499": {
      "op": "SUB"
    },
    "4500": {
      "op": "NOT"
    },
    "4501": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "AND",
      "path": "7"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4508": {
      "op": "SHL"
    },
    "4509": {
      "op": "SUB"
    },
    "4510": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4511": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4512": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4513": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "AND",
      "path": "7"
    },
    "4514": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4515": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4516": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4517": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "OR",
      "path": "7"
    },
    "4518": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4519": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1818,
        1835
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4520": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1629,
        1840
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "e24a941b17e593613e0021a592e20fe5c9f8204d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.6;\n\nimport \"@chainlink/contracts/src/v0.6/LinkTokenReceiver.sol\";\nimport \"@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol\";\nimport \"@chainlink/contracts/src/v0.6/interfaces/OracleInterface.sol\";\nimport \"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\";\nimport \"@chainlink/contracts/src/v0.6/interfaces/WithdrawalInterface.sol\";\nimport \"@chainlink/contracts/src/v0.6/vendor/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\n\n/**\n * @title The Chainlink Oracle contract\n * @notice Node operators can deploy this contract to fulfill requests sent to them\n */\ncontract Oracle is\n    ChainlinkRequestInterface,\n    OracleInterface,\n    Ownable,\n    LinkTokenReceiver,\n    WithdrawalInterface\n{\n    using SafeMathChainlink for uint256;\n\n    uint256 public constant EXPIRY_TIME = 5 minutes;\n    uint256 private constant MINIMUM_CONSUMER_GAS_LIMIT = 400000;\n    // We initialize fields to 1 instead of 0 so that the first invocation\n    // does not cost more gas.\n    uint256 private constant ONE_FOR_CONSISTENT_GAS_COST = 1;\n\n    LinkTokenInterface internal LinkToken;\n    mapping(bytes32 => bytes32) private commitments;\n    mapping(address => bool) private authorizedNodes;\n    uint256 private withdrawableTokens = ONE_FOR_CONSISTENT_GAS_COST;\n\n    event OracleRequest(\n        bytes32 indexed specId,\n        address requester,\n        bytes32 requestId,\n        uint256 payment,\n        address callbackAddr,\n        bytes4 callbackFunctionId,\n        uint256 cancelExpiration,\n        uint256 dataVersion,\n        bytes data\n    );\n\n    event CancelOracleRequest(bytes32 indexed requestId);\n\n    /**\n     * @notice Deploy with the address of the LINK token\n     * @dev Sets the LinkToken address for the imported LinkTokenInterface\n     * @param _link The address of the LINK token\n     */\n    constructor(address _link) public Ownable() {\n        LinkToken = LinkTokenInterface(_link); // external but already deployed and unalterable\n    }\n\n    /**\n     * @notice Creates the Chainlink request\n     * @dev Stores the hash of the params as the on-chain commitment for the request.\n     * Emits OracleRequest event for the Chainlink node to detect.\n     * @param _sender The sender of the request\n     * @param _payment The amount of payment given (specified in wei)\n     * @param _specId The Job Specification ID\n     * @param _callbackAddress The callback address for the response\n     * @param _callbackFunctionId The callback function ID for the response\n     * @param _nonce The nonce sent by the requester\n     * @param _dataVersion The specified data version\n     * @param _data The CBOR payload of the request\n     */\n    function oracleRequest(\n        address _sender,\n        uint256 _payment,\n        bytes32 _specId,\n        address _callbackAddress,\n        bytes4 _callbackFunctionId,\n        uint256 _nonce,\n        uint256 _dataVersion,\n        bytes calldata _data\n    ) external override onlyLINK checkCallbackAddress(_callbackAddress) {\n        bytes32 requestId = keccak256(abi.encodePacked(_sender, _nonce));\n        require(commitments[requestId] == 0, \"Must use a unique ID\");\n        // solhint-disable-next-line not-rely-on-time\n        uint256 expiration = now.add(EXPIRY_TIME);\n\n        commitments[requestId] = keccak256(\n            abi.encodePacked(\n                _payment,\n                _callbackAddress,\n                _callbackFunctionId,\n                expiration\n            )\n        );\n\n        emit OracleRequest(\n            _specId,\n            _sender,\n            requestId,\n            _payment,\n            _callbackAddress,\n            _callbackFunctionId,\n            expiration,\n            _dataVersion,\n            _data\n        );\n    }\n\n    /**\n     * @notice Called by the Chainlink node to fulfill requests\n     * @dev Given params must hash back to the commitment stored from `oracleRequest`.\n     * Will call the callback address' callback function without bubbling up error\n     * checking in a `require` so that the node can get paid.\n     * @param _requestId The fulfillment request ID that must match the requester's\n     * @param _payment The payment amount that will be released for the oracle (specified in wei)\n     * @param _callbackAddress The callback address to call for fulfillment\n     * @param _callbackFunctionId The callback function ID to use for fulfillment\n     * @param _expiration The expiration that the node should respond by before the requester can cancel\n     * @param _data The data to return to the consuming contract\n     * @return Status if the external call was successful\n     */\n    function fulfillOracleRequest(\n        bytes32 _requestId,\n        uint256 _payment,\n        address _callbackAddress,\n        bytes4 _callbackFunctionId,\n        uint256 _expiration,\n        bytes32 _data\n    )\n        external\n        override\n        onlyAuthorizedNode\n        isValidRequest(_requestId)\n        returns (bool)\n    {\n        bytes32 paramsHash = keccak256(\n            abi.encodePacked(\n                _payment,\n                _callbackAddress,\n                _callbackFunctionId,\n                _expiration\n            )\n        );\n        require(\n            commitments[_requestId] == paramsHash,\n            \"Params do not match request ID\"\n        );\n        withdrawableTokens = withdrawableTokens.add(_payment);\n        delete commitments[_requestId];\n        require(\n            gasleft() >= MINIMUM_CONSUMER_GAS_LIMIT,\n            \"Must provide consumer enough gas\"\n        );\n        // All updates to the oracle's fulfillment should come before calling the\n        // callback(addr+functionId) as it is untrusted.\n        // See: https://solidity.readthedocs.io/en/develop/security-considerations.html#use-the-checks-effects-interactions-pattern\n        (bool success, ) = _callbackAddress.call(\n            abi.encodeWithSelector(_callbackFunctionId, _requestId, _data)\n        ); // solhint-disable-line avoid-low-level-calls\n        return success;\n    }\n\n    /**\n     * @notice Use this to check if a node is authorized for fulfilling requests\n     * @param _node The address of the Chainlink node\n     * @return The authorization status of the node\n     */\n    function getAuthorizationStatus(address _node)\n        external\n        view\n        override\n        returns (bool)\n    {\n        return authorizedNodes[_node];\n    }\n\n    /**\n     * @notice Sets the fulfillment permission for a given node. Use `true` to allow, `false` to disallow.\n     * @param _node The address of the Chainlink node\n     * @param _allowed Bool value to determine if the node can fulfill requests\n     */\n    function setFulfillmentPermission(address _node, bool _allowed)\n        external\n        override\n        onlyOwner\n    {\n        authorizedNodes[_node] = _allowed;\n    }\n\n    /**\n     * @notice Allows the node operator to withdraw earned LINK to a given address\n     * @dev The owner of the contract can be another wallet and does not have to be a Chainlink node\n     * @param _recipient The address to send the LINK token to\n     * @param _amount The amount to send (specified in wei)\n     */\n    function withdraw(address _recipient, uint256 _amount)\n        external\n        override(OracleInterface, WithdrawalInterface)\n        onlyOwner\n        hasAvailableFunds(_amount)\n    {\n        withdrawableTokens = withdrawableTokens.sub(_amount);\n        assert(LinkToken.transfer(_recipient, _amount));\n    }\n\n    /**\n     * @notice Displays the amount of LINK that is available for the node operator to withdraw\n     * @dev We use `ONE_FOR_CONSISTENT_GAS_COST` in place of 0 in storage\n     * @return The amount of withdrawable LINK on the contract\n     */\n    function withdrawable()\n        external\n        view\n        override(OracleInterface, WithdrawalInterface)\n        onlyOwner\n        returns (uint256)\n    {\n        return withdrawableTokens.sub(ONE_FOR_CONSISTENT_GAS_COST);\n    }\n\n    /**\n     * @notice Allows requesters to cancel requests sent to this oracle contract. Will transfer the LINK\n     * sent for the request back to the requester's address.\n     * @dev Given params must hash to a commitment stored on the contract in order for the request to be valid\n     * Emits CancelOracleRequest event.\n     * @param _requestId The request ID\n     * @param _payment The amount of payment given (specified in wei)\n     * @param _callbackFunc The requester's specified callback address\n     * @param _expiration The time of the expiration for the request\n     */\n    function cancelOracleRequest(\n        bytes32 _requestId,\n        uint256 _payment,\n        bytes4 _callbackFunc,\n        uint256 _expiration\n    ) external override {\n        bytes32 paramsHash = keccak256(\n            abi.encodePacked(_payment, msg.sender, _callbackFunc, _expiration)\n        );\n        require(\n            paramsHash == commitments[_requestId],\n            \"Params do not match request ID\"\n        );\n        // solhint-disable-next-line not-rely-on-time\n        require(_expiration <= now, \"Request is not expired\");\n\n        delete commitments[_requestId];\n        emit CancelOracleRequest(_requestId);\n\n        assert(LinkToken.transfer(msg.sender, _payment));\n    }\n\n    /**\n     * @notice Returns the address of the LINK token\n     * @dev This is the public implementation for chainlinkTokenAddress, which is\n     * an internal method of the ChainlinkClient contract\n     */\n    function getChainlinkToken() public view override returns (address) {\n        return address(LinkToken);\n    }\n\n    // MODIFIERS\n\n    /**\n     * @dev Reverts if amount requested is greater than withdrawable balance\n     * @param _amount The given amount to compare to `withdrawableTokens`\n     */\n    modifier hasAvailableFunds(uint256 _amount) {\n        require(\n            withdrawableTokens >= _amount.add(ONE_FOR_CONSISTENT_GAS_COST),\n            \"Amount requested is greater than withdrawable balance\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Reverts if request ID does not exist\n     * @param _requestId The given request ID to check in stored `commitments`\n     */\n    modifier isValidRequest(bytes32 _requestId) {\n        require(commitments[_requestId] != 0, \"Must have a valid requestId\");\n        _;\n    }\n\n    /**\n     * @dev Reverts if `msg.sender` is not authorized to fulfill requests\n     */\n    modifier onlyAuthorizedNode() {\n        require(\n            authorizedNodes[msg.sender] || msg.sender == owner(),\n            \"Not an authorized node to fulfill requests\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Reverts if the callback address is the LINK token\n     * @param _to The callback address\n     */\n    modifier checkCallbackAddress(address _to) {\n        require(_to != address(LinkToken), \"Cannot callback to LINK\");\n        _;\n    }\n}\n",
  "sourceMap": "680:10220:9:-:0;;;1139:1;1297:64;;1916:147;5:9:-1;2:2;;;27:1;24;17:12;2:2;1916:147:9;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1916:147:9;750:6:7;:19;;-1:-1:-1;;;;;;750:19:7;759:10;750:19;;;;780:40;;-1:-1:-1;;;;;813:6:7;;;;;750;780:40;;750:6;;780:40;1970:9:9::1;:37:::0;;-1:-1:-1;;;;;;1970:37:9::1;-1:-1:-1::0;;;;;1970:37:9;;;::::1;::::0;;;::::1;::::0;;680:10220;;;-1:-1:-1;680:10220:9;;",
  "sourcePath": "contracts/Oracle.sol",
  "type": "contract"
}